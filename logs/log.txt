densenet


################### modules ################
:DenseNet (
  (base): DenseNet (
    (features): Sequential (
      (conv0): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
      (norm0): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True)
      (relu0): ReLU (inplace)
      (pool0): MaxPool2d (size=(3, 3), stride=(2, 2), padding=(1, 1), dilation=(1, 1))
      (denseblock1): _DenseBlock (
        (denselayer1): _DenseLayer (
          (norm.1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True)
          (relu.1): ReLU (inplace)
          (conv.1): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
          (relu.2): ReLU (inplace)
          (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer2): _DenseLayer (
          (norm.1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True)
          (relu.1): ReLU (inplace)
          (conv.1): Conv2d(96, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
          (relu.2): ReLU (inplace)
          (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer3): _DenseLayer (
          (norm.1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
          (relu.1): ReLU (inplace)
          (conv.1): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
          (relu.2): ReLU (inplace)
          (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer4): _DenseLayer (
          (norm.1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True)
          (relu.1): ReLU (inplace)
          (conv.1): Conv2d(160, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
          (relu.2): ReLU (inplace)
          (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer5): _DenseLayer (
          (norm.1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True)
          (relu.1): ReLU (inplace)
          (conv.1): Conv2d(192, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
          (relu.2): ReLU (inplace)
          (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer6): _DenseLayer (
          (norm.1): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True)
          (relu.1): ReLU (inplace)
          (conv.1): Conv2d(224, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
          (relu.2): ReLU (inplace)
          (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (transition1): _Transition (
        (norm): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)
        (relu): ReLU (inplace)
        (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (pool): AvgPool2d (size=2, stride=2, padding=0, ceil_mode=False, count_include_pad=True)
      )
      (denseblock2): _DenseBlock (
        (denselayer1): _DenseLayer (
          (norm.1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
          (relu.1): ReLU (inplace)
          (conv.1): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
          (relu.2): ReLU (inplace)
          (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer2): _DenseLayer (
          (norm.1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True)
          (relu.1): ReLU (inplace)
          (conv.1): Conv2d(160, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
          (relu.2): ReLU (inplace)
          (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer3): _DenseLayer (
          (norm.1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True)
          (relu.1): ReLU (inplace)
          (conv.1): Conv2d(192, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
          (relu.2): ReLU (inplace)
          (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer4): _DenseLayer (
          (norm.1): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True)
          (relu.1): ReLU (inplace)
          (conv.1): Conv2d(224, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
          (relu.2): ReLU (inplace)
          (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer5): _DenseLayer (
          (norm.1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)
          (relu.1): ReLU (inplace)
          (conv.1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
          (relu.2): ReLU (inplace)
          (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer6): _DenseLayer (
          (norm.1): BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True)
          (relu.1): ReLU (inplace)
          (conv.1): Conv2d(288, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
          (relu.2): ReLU (inplace)
          (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer7): _DenseLayer (
          (norm.1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True)
          (relu.1): ReLU (inplace)
          (conv.1): Conv2d(320, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
          (relu.2): ReLU (inplace)
          (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer8): _DenseLayer (
          (norm.1): BatchNorm2d(352, eps=1e-05, momentum=0.1, affine=True)
          (relu.1): ReLU (inplace)
          (conv.1): Conv2d(352, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
          (relu.2): ReLU (inplace)
          (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer9): _DenseLayer (
          (norm.1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True)
          (relu.1): ReLU (inplace)
          (conv.1): Conv2d(384, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
          (relu.2): ReLU (inplace)
          (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer10): _DenseLayer (
          (norm.1): BatchNorm2d(416, eps=1e-05, momentum=0.1, affine=True)
          (relu.1): ReLU (inplace)
          (conv.1): Conv2d(416, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
          (relu.2): ReLU (inplace)
          (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer11): _DenseLayer (
          (norm.1): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True)
          (relu.1): ReLU (inplace)
          (conv.1): Conv2d(448, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
          (relu.2): ReLU (inplace)
          (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer12): _DenseLayer (
          (norm.1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True)
          (relu.1): ReLU (inplace)
          (conv.1): Conv2d(480, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
          (relu.2): ReLU (inplace)
          (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (transition2): _Transition (
        (norm): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True)
        (relu): ReLU (inplace)
        (conv): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (pool): AvgPool2d (size=2, stride=2, padding=0, ceil_mode=False, count_include_pad=True)
      )
      (denseblock3): _DenseBlock (
        (denselayer1): _DenseLayer (
          (norm.1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)
          (relu.1): ReLU (inplace)
          (conv.1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
          (relu.2): ReLU (inplace)
          (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer2): _DenseLayer (
          (norm.1): BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True)
          (relu.1): ReLU (inplace)
          (conv.1): Conv2d(288, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
          (relu.2): ReLU (inplace)
          (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer3): _DenseLayer (
          (norm.1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True)
          (relu.1): ReLU (inplace)
          (conv.1): Conv2d(320, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
          (relu.2): ReLU (inplace)
          (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer4): _DenseLayer (
          (norm.1): BatchNorm2d(352, eps=1e-05, momentum=0.1, affine=True)
          (relu.1): ReLU (inplace)
          (conv.1): Conv2d(352, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
          (relu.2): ReLU (inplace)
          (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer5): _DenseLayer (
          (norm.1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True)
          (relu.1): ReLU (inplace)
          (conv.1): Conv2d(384, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
          (relu.2): ReLU (inplace)
          (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer6): _DenseLayer (
          (norm.1): BatchNorm2d(416, eps=1e-05, momentum=0.1, affine=True)
          (relu.1): ReLU (inplace)
          (conv.1): Conv2d(416, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
          (relu.2): ReLU (inplace)
          (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer7): _DenseLayer (
          (norm.1): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True)
          (relu.1): ReLU (inplace)
          (conv.1): Conv2d(448, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
          (relu.2): ReLU (inplace)
          (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer8): _DenseLayer (
          (norm.1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True)
          (relu.1): ReLU (inplace)
          (conv.1): Conv2d(480, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
          (relu.2): ReLU (inplace)
          (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer9): _DenseLayer (
          (norm.1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True)
          (relu.1): ReLU (inplace)
          (conv.1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
          (relu.2): ReLU (inplace)
          (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer10): _DenseLayer (
          (norm.1): BatchNorm2d(544, eps=1e-05, momentum=0.1, affine=True)
          (relu.1): ReLU (inplace)
          (conv.1): Conv2d(544, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
          (relu.2): ReLU (inplace)
          (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer11): _DenseLayer (
          (norm.1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True)
          (relu.1): ReLU (inplace)
          (conv.1): Conv2d(576, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
          (relu.2): ReLU (inplace)
          (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer12): _DenseLayer (
          (norm.1): BatchNorm2d(608, eps=1e-05, momentum=0.1, affine=True)
          (relu.1): ReLU (inplace)
          (conv.1): Conv2d(608, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
          (relu.2): ReLU (inplace)
          (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer13): _DenseLayer (
          (norm.1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True)
          (relu.1): ReLU (inplace)
          (conv.1): Conv2d(640, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
          (relu.2): ReLU (inplace)
          (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer14): _DenseLayer (
          (norm.1): BatchNorm2d(672, eps=1e-05, momentum=0.1, affine=True)
          (relu.1): ReLU (inplace)
          (conv.1): Conv2d(672, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
          (relu.2): ReLU (inplace)
          (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer15): _DenseLayer (
          (norm.1): BatchNorm2d(704, eps=1e-05, momentum=0.1, affine=True)
          (relu.1): ReLU (inplace)
          (conv.1): Conv2d(704, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
          (relu.2): ReLU (inplace)
          (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer16): _DenseLayer (
          (norm.1): BatchNorm2d(736, eps=1e-05, momentum=0.1, affine=True)
          (relu.1): ReLU (inplace)
          (conv.1): Conv2d(736, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
          (relu.2): ReLU (inplace)
          (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer17): _DenseLayer (
          (norm.1): BatchNorm2d(768, eps=1e-05, momentum=0.1, affine=True)
          (relu.1): ReLU (inplace)
          (conv.1): Conv2d(768, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
          (relu.2): ReLU (inplace)
          (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer18): _DenseLayer (
          (norm.1): BatchNorm2d(800, eps=1e-05, momentum=0.1, affine=True)
          (relu.1): ReLU (inplace)
          (conv.1): Conv2d(800, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
          (relu.2): ReLU (inplace)
          (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer19): _DenseLayer (
          (norm.1): BatchNorm2d(832, eps=1e-05, momentum=0.1, affine=True)
          (relu.1): ReLU (inplace)
          (conv.1): Conv2d(832, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
          (relu.2): ReLU (inplace)
          (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer20): _DenseLayer (
          (norm.1): BatchNorm2d(864, eps=1e-05, momentum=0.1, affine=True)
          (relu.1): ReLU (inplace)
          (conv.1): Conv2d(864, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
          (relu.2): ReLU (inplace)
          (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer21): _DenseLayer (
          (norm.1): BatchNorm2d(896, eps=1e-05, momentum=0.1, affine=True)
          (relu.1): ReLU (inplace)
          (conv.1): Conv2d(896, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
          (relu.2): ReLU (inplace)
          (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer22): _DenseLayer (
          (norm.1): BatchNorm2d(928, eps=1e-05, momentum=0.1, affine=True)
          (relu.1): ReLU (inplace)
          (conv.1): Conv2d(928, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
          (relu.2): ReLU (inplace)
          (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer23): _DenseLayer (
          (norm.1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True)
          (relu.1): ReLU (inplace)
          (conv.1): Conv2d(960, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
          (relu.2): ReLU (inplace)
          (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer24): _DenseLayer (
          (norm.1): BatchNorm2d(992, eps=1e-05, momentum=0.1, affine=True)
          (relu.1): ReLU (inplace)
          (conv.1): Conv2d(992, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
          (relu.2): ReLU (inplace)
          (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (transition3): _Transition (
        (norm): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True)
        (relu): ReLU (inplace)
        (conv): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (pool): AvgPool2d (size=2, stride=2, padding=0, ceil_mode=False, count_include_pad=True)
      )
      (denseblock4): _DenseBlock (
        (denselayer1): _DenseLayer (
          (norm.1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True)
          (relu.1): ReLU (inplace)
          (conv.1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
          (relu.2): ReLU (inplace)
          (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer2): _DenseLayer (
          (norm.1): BatchNorm2d(544, eps=1e-05, momentum=0.1, affine=True)
          (relu.1): ReLU (inplace)
          (conv.1): Conv2d(544, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
          (relu.2): ReLU (inplace)
          (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer3): _DenseLayer (
          (norm.1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True)
          (relu.1): ReLU (inplace)
          (conv.1): Conv2d(576, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
          (relu.2): ReLU (inplace)
          (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer4): _DenseLayer (
          (norm.1): BatchNorm2d(608, eps=1e-05, momentum=0.1, affine=True)
          (relu.1): ReLU (inplace)
          (conv.1): Conv2d(608, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
          (relu.2): ReLU (inplace)
          (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer5): _DenseLayer (
          (norm.1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True)
          (relu.1): ReLU (inplace)
          (conv.1): Conv2d(640, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
          (relu.2): ReLU (inplace)
          (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer6): _DenseLayer (
          (norm.1): BatchNorm2d(672, eps=1e-05, momentum=0.1, affine=True)
          (relu.1): ReLU (inplace)
          (conv.1): Conv2d(672, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
          (relu.2): ReLU (inplace)
          (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer7): _DenseLayer (
          (norm.1): BatchNorm2d(704, eps=1e-05, momentum=0.1, affine=True)
          (relu.1): ReLU (inplace)
          (conv.1): Conv2d(704, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
          (relu.2): ReLU (inplace)
          (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer8): _DenseLayer (
          (norm.1): BatchNorm2d(736, eps=1e-05, momentum=0.1, affine=True)
          (relu.1): ReLU (inplace)
          (conv.1): Conv2d(736, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
          (relu.2): ReLU (inplace)
          (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer9): _DenseLayer (
          (norm.1): BatchNorm2d(768, eps=1e-05, momentum=0.1, affine=True)
          (relu.1): ReLU (inplace)
          (conv.1): Conv2d(768, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
          (relu.2): ReLU (inplace)
          (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer10): _DenseLayer (
          (norm.1): BatchNorm2d(800, eps=1e-05, momentum=0.1, affine=True)
          (relu.1): ReLU (inplace)
          (conv.1): Conv2d(800, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
          (relu.2): ReLU (inplace)
          (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer11): _DenseLayer (
          (norm.1): BatchNorm2d(832, eps=1e-05, momentum=0.1, affine=True)
          (relu.1): ReLU (inplace)
          (conv.1): Conv2d(832, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
          (relu.2): ReLU (inplace)
          (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer12): _DenseLayer (
          (norm.1): BatchNorm2d(864, eps=1e-05, momentum=0.1, affine=True)
          (relu.1): ReLU (inplace)
          (conv.1): Conv2d(864, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
          (relu.2): ReLU (inplace)
          (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer13): _DenseLayer (
          (norm.1): BatchNorm2d(896, eps=1e-05, momentum=0.1, affine=True)
          (relu.1): ReLU (inplace)
          (conv.1): Conv2d(896, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
          (relu.2): ReLU (inplace)
          (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer14): _DenseLayer (
          (norm.1): BatchNorm2d(928, eps=1e-05, momentum=0.1, affine=True)
          (relu.1): ReLU (inplace)
          (conv.1): Conv2d(928, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
          (relu.2): ReLU (inplace)
          (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer15): _DenseLayer (
          (norm.1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True)
          (relu.1): ReLU (inplace)
          (conv.1): Conv2d(960, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
          (relu.2): ReLU (inplace)
          (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer16): _DenseLayer (
          (norm.1): BatchNorm2d(992, eps=1e-05, momentum=0.1, affine=True)
          (relu.1): ReLU (inplace)
          (conv.1): Conv2d(992, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
          (relu.2): ReLU (inplace)
          (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (norm5): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True)
    )
  )
  (feat): Linear (1024 -> 256)
  (feat_bn): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True)
  (classifier): Linear (256 -> 20330)
)
base:DenseNet (
  (features): Sequential (
    (conv0): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
    (norm0): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True)
    (relu0): ReLU (inplace)
    (pool0): MaxPool2d (size=(3, 3), stride=(2, 2), padding=(1, 1), dilation=(1, 1))
    (denseblock1): _DenseBlock (
      (denselayer1): _DenseLayer (
        (norm.1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True)
        (relu.1): ReLU (inplace)
        (conv.1): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
        (relu.2): ReLU (inplace)
        (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer2): _DenseLayer (
        (norm.1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True)
        (relu.1): ReLU (inplace)
        (conv.1): Conv2d(96, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
        (relu.2): ReLU (inplace)
        (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer3): _DenseLayer (
        (norm.1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
        (relu.1): ReLU (inplace)
        (conv.1): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
        (relu.2): ReLU (inplace)
        (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer4): _DenseLayer (
        (norm.1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True)
        (relu.1): ReLU (inplace)
        (conv.1): Conv2d(160, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
        (relu.2): ReLU (inplace)
        (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer5): _DenseLayer (
        (norm.1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True)
        (relu.1): ReLU (inplace)
        (conv.1): Conv2d(192, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
        (relu.2): ReLU (inplace)
        (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer6): _DenseLayer (
        (norm.1): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True)
        (relu.1): ReLU (inplace)
        (conv.1): Conv2d(224, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
        (relu.2): ReLU (inplace)
        (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (transition1): _Transition (
      (norm): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)
      (relu): ReLU (inplace)
      (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (pool): AvgPool2d (size=2, stride=2, padding=0, ceil_mode=False, count_include_pad=True)
    )
    (denseblock2): _DenseBlock (
      (denselayer1): _DenseLayer (
        (norm.1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
        (relu.1): ReLU (inplace)
        (conv.1): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
        (relu.2): ReLU (inplace)
        (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer2): _DenseLayer (
        (norm.1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True)
        (relu.1): ReLU (inplace)
        (conv.1): Conv2d(160, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
        (relu.2): ReLU (inplace)
        (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer3): _DenseLayer (
        (norm.1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True)
        (relu.1): ReLU (inplace)
        (conv.1): Conv2d(192, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
        (relu.2): ReLU (inplace)
        (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer4): _DenseLayer (
        (norm.1): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True)
        (relu.1): ReLU (inplace)
        (conv.1): Conv2d(224, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
        (relu.2): ReLU (inplace)
        (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer5): _DenseLayer (
        (norm.1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)
        (relu.1): ReLU (inplace)
        (conv.1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
        (relu.2): ReLU (inplace)
        (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer6): _DenseLayer (
        (norm.1): BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True)
        (relu.1): ReLU (inplace)
        (conv.1): Conv2d(288, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
        (relu.2): ReLU (inplace)
        (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer7): _DenseLayer (
        (norm.1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True)
        (relu.1): ReLU (inplace)
        (conv.1): Conv2d(320, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
        (relu.2): ReLU (inplace)
        (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer8): _DenseLayer (
        (norm.1): BatchNorm2d(352, eps=1e-05, momentum=0.1, affine=True)
        (relu.1): ReLU (inplace)
        (conv.1): Conv2d(352, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
        (relu.2): ReLU (inplace)
        (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer9): _DenseLayer (
        (norm.1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True)
        (relu.1): ReLU (inplace)
        (conv.1): Conv2d(384, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
        (relu.2): ReLU (inplace)
        (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer10): _DenseLayer (
        (norm.1): BatchNorm2d(416, eps=1e-05, momentum=0.1, affine=True)
        (relu.1): ReLU (inplace)
        (conv.1): Conv2d(416, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
        (relu.2): ReLU (inplace)
        (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer11): _DenseLayer (
        (norm.1): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True)
        (relu.1): ReLU (inplace)
        (conv.1): Conv2d(448, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
        (relu.2): ReLU (inplace)
        (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer12): _DenseLayer (
        (norm.1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True)
        (relu.1): ReLU (inplace)
        (conv.1): Conv2d(480, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
        (relu.2): ReLU (inplace)
        (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (transition2): _Transition (
      (norm): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True)
      (relu): ReLU (inplace)
      (conv): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (pool): AvgPool2d (size=2, stride=2, padding=0, ceil_mode=False, count_include_pad=True)
    )
    (denseblock3): _DenseBlock (
      (denselayer1): _DenseLayer (
        (norm.1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)
        (relu.1): ReLU (inplace)
        (conv.1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
        (relu.2): ReLU (inplace)
        (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer2): _DenseLayer (
        (norm.1): BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True)
        (relu.1): ReLU (inplace)
        (conv.1): Conv2d(288, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
        (relu.2): ReLU (inplace)
        (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer3): _DenseLayer (
        (norm.1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True)
        (relu.1): ReLU (inplace)
        (conv.1): Conv2d(320, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
        (relu.2): ReLU (inplace)
        (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer4): _DenseLayer (
        (norm.1): BatchNorm2d(352, eps=1e-05, momentum=0.1, affine=True)
        (relu.1): ReLU (inplace)
        (conv.1): Conv2d(352, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
        (relu.2): ReLU (inplace)
        (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer5): _DenseLayer (
        (norm.1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True)
        (relu.1): ReLU (inplace)
        (conv.1): Conv2d(384, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
        (relu.2): ReLU (inplace)
        (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer6): _DenseLayer (
        (norm.1): BatchNorm2d(416, eps=1e-05, momentum=0.1, affine=True)
        (relu.1): ReLU (inplace)
        (conv.1): Conv2d(416, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
        (relu.2): ReLU (inplace)
        (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer7): _DenseLayer (
        (norm.1): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True)
        (relu.1): ReLU (inplace)
        (conv.1): Conv2d(448, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
        (relu.2): ReLU (inplace)
        (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer8): _DenseLayer (
        (norm.1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True)
        (relu.1): ReLU (inplace)
        (conv.1): Conv2d(480, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
        (relu.2): ReLU (inplace)
        (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer9): _DenseLayer (
        (norm.1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True)
        (relu.1): ReLU (inplace)
        (conv.1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
        (relu.2): ReLU (inplace)
        (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer10): _DenseLayer (
        (norm.1): BatchNorm2d(544, eps=1e-05, momentum=0.1, affine=True)
        (relu.1): ReLU (inplace)
        (conv.1): Conv2d(544, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
        (relu.2): ReLU (inplace)
        (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer11): _DenseLayer (
        (norm.1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True)
        (relu.1): ReLU (inplace)
        (conv.1): Conv2d(576, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
        (relu.2): ReLU (inplace)
        (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer12): _DenseLayer (
        (norm.1): BatchNorm2d(608, eps=1e-05, momentum=0.1, affine=True)
        (relu.1): ReLU (inplace)
        (conv.1): Conv2d(608, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
        (relu.2): ReLU (inplace)
        (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer13): _DenseLayer (
        (norm.1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True)
        (relu.1): ReLU (inplace)
        (conv.1): Conv2d(640, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
        (relu.2): ReLU (inplace)
        (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer14): _DenseLayer (
        (norm.1): BatchNorm2d(672, eps=1e-05, momentum=0.1, affine=True)
        (relu.1): ReLU (inplace)
        (conv.1): Conv2d(672, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
        (relu.2): ReLU (inplace)
        (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer15): _DenseLayer (
        (norm.1): BatchNorm2d(704, eps=1e-05, momentum=0.1, affine=True)
        (relu.1): ReLU (inplace)
        (conv.1): Conv2d(704, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
        (relu.2): ReLU (inplace)
        (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer16): _DenseLayer (
        (norm.1): BatchNorm2d(736, eps=1e-05, momentum=0.1, affine=True)
        (relu.1): ReLU (inplace)
        (conv.1): Conv2d(736, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
        (relu.2): ReLU (inplace)
        (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer17): _DenseLayer (
        (norm.1): BatchNorm2d(768, eps=1e-05, momentum=0.1, affine=True)
        (relu.1): ReLU (inplace)
        (conv.1): Conv2d(768, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
        (relu.2): ReLU (inplace)
        (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer18): _DenseLayer (
        (norm.1): BatchNorm2d(800, eps=1e-05, momentum=0.1, affine=True)
        (relu.1): ReLU (inplace)
        (conv.1): Conv2d(800, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
        (relu.2): ReLU (inplace)
        (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer19): _DenseLayer (
        (norm.1): BatchNorm2d(832, eps=1e-05, momentum=0.1, affine=True)
        (relu.1): ReLU (inplace)
        (conv.1): Conv2d(832, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
        (relu.2): ReLU (inplace)
        (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer20): _DenseLayer (
        (norm.1): BatchNorm2d(864, eps=1e-05, momentum=0.1, affine=True)
        (relu.1): ReLU (inplace)
        (conv.1): Conv2d(864, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
        (relu.2): ReLU (inplace)
        (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer21): _DenseLayer (
        (norm.1): BatchNorm2d(896, eps=1e-05, momentum=0.1, affine=True)
        (relu.1): ReLU (inplace)
        (conv.1): Conv2d(896, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
        (relu.2): ReLU (inplace)
        (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer22): _DenseLayer (
        (norm.1): BatchNorm2d(928, eps=1e-05, momentum=0.1, affine=True)
        (relu.1): ReLU (inplace)
        (conv.1): Conv2d(928, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
        (relu.2): ReLU (inplace)
        (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer23): _DenseLayer (
        (norm.1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True)
        (relu.1): ReLU (inplace)
        (conv.1): Conv2d(960, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
        (relu.2): ReLU (inplace)
        (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer24): _DenseLayer (
        (norm.1): BatchNorm2d(992, eps=1e-05, momentum=0.1, affine=True)
        (relu.1): ReLU (inplace)
        (conv.1): Conv2d(992, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
        (relu.2): ReLU (inplace)
        (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (transition3): _Transition (
      (norm): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True)
      (relu): ReLU (inplace)
      (conv): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (pool): AvgPool2d (size=2, stride=2, padding=0, ceil_mode=False, count_include_pad=True)
    )
    (denseblock4): _DenseBlock (
      (denselayer1): _DenseLayer (
        (norm.1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True)
        (relu.1): ReLU (inplace)
        (conv.1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
        (relu.2): ReLU (inplace)
        (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer2): _DenseLayer (
        (norm.1): BatchNorm2d(544, eps=1e-05, momentum=0.1, affine=True)
        (relu.1): ReLU (inplace)
        (conv.1): Conv2d(544, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
        (relu.2): ReLU (inplace)
        (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer3): _DenseLayer (
        (norm.1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True)
        (relu.1): ReLU (inplace)
        (conv.1): Conv2d(576, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
        (relu.2): ReLU (inplace)
        (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer4): _DenseLayer (
        (norm.1): BatchNorm2d(608, eps=1e-05, momentum=0.1, affine=True)
        (relu.1): ReLU (inplace)
        (conv.1): Conv2d(608, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
        (relu.2): ReLU (inplace)
        (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer5): _DenseLayer (
        (norm.1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True)
        (relu.1): ReLU (inplace)
        (conv.1): Conv2d(640, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
        (relu.2): ReLU (inplace)
        (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer6): _DenseLayer (
        (norm.1): BatchNorm2d(672, eps=1e-05, momentum=0.1, affine=True)
        (relu.1): ReLU (inplace)
        (conv.1): Conv2d(672, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
        (relu.2): ReLU (inplace)
        (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer7): _DenseLayer (
        (norm.1): BatchNorm2d(704, eps=1e-05, momentum=0.1, affine=True)
        (relu.1): ReLU (inplace)
        (conv.1): Conv2d(704, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
        (relu.2): ReLU (inplace)
        (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer8): _DenseLayer (
        (norm.1): BatchNorm2d(736, eps=1e-05, momentum=0.1, affine=True)
        (relu.1): ReLU (inplace)
        (conv.1): Conv2d(736, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
        (relu.2): ReLU (inplace)
        (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer9): _DenseLayer (
        (norm.1): BatchNorm2d(768, eps=1e-05, momentum=0.1, affine=True)
        (relu.1): ReLU (inplace)
        (conv.1): Conv2d(768, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
        (relu.2): ReLU (inplace)
        (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer10): _DenseLayer (
        (norm.1): BatchNorm2d(800, eps=1e-05, momentum=0.1, affine=True)
        (relu.1): ReLU (inplace)
        (conv.1): Conv2d(800, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
        (relu.2): ReLU (inplace)
        (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer11): _DenseLayer (
        (norm.1): BatchNorm2d(832, eps=1e-05, momentum=0.1, affine=True)
        (relu.1): ReLU (inplace)
        (conv.1): Conv2d(832, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
        (relu.2): ReLU (inplace)
        (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer12): _DenseLayer (
        (norm.1): BatchNorm2d(864, eps=1e-05, momentum=0.1, affine=True)
        (relu.1): ReLU (inplace)
        (conv.1): Conv2d(864, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
        (relu.2): ReLU (inplace)
        (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer13): _DenseLayer (
        (norm.1): BatchNorm2d(896, eps=1e-05, momentum=0.1, affine=True)
        (relu.1): ReLU (inplace)
        (conv.1): Conv2d(896, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
        (relu.2): ReLU (inplace)
        (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer14): _DenseLayer (
        (norm.1): BatchNorm2d(928, eps=1e-05, momentum=0.1, affine=True)
        (relu.1): ReLU (inplace)
        (conv.1): Conv2d(928, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
        (relu.2): ReLU (inplace)
        (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer15): _DenseLayer (
        (norm.1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True)
        (relu.1): ReLU (inplace)
        (conv.1): Conv2d(960, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
        (relu.2): ReLU (inplace)
        (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer16): _DenseLayer (
        (norm.1): BatchNorm2d(992, eps=1e-05, momentum=0.1, affine=True)
        (relu.1): ReLU (inplace)
        (conv.1): Conv2d(992, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
        (relu.2): ReLU (inplace)
        (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (norm5): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True)
  )
)
base.features:Sequential (
  (conv0): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
  (norm0): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True)
  (relu0): ReLU (inplace)
  (pool0): MaxPool2d (size=(3, 3), stride=(2, 2), padding=(1, 1), dilation=(1, 1))
  (denseblock1): _DenseBlock (
    (denselayer1): _DenseLayer (
      (norm.1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True)
      (relu.1): ReLU (inplace)
      (conv.1): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
      (relu.2): ReLU (inplace)
      (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (denselayer2): _DenseLayer (
      (norm.1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True)
      (relu.1): ReLU (inplace)
      (conv.1): Conv2d(96, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
      (relu.2): ReLU (inplace)
      (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (denselayer3): _DenseLayer (
      (norm.1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
      (relu.1): ReLU (inplace)
      (conv.1): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
      (relu.2): ReLU (inplace)
      (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (denselayer4): _DenseLayer (
      (norm.1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True)
      (relu.1): ReLU (inplace)
      (conv.1): Conv2d(160, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
      (relu.2): ReLU (inplace)
      (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (denselayer5): _DenseLayer (
      (norm.1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True)
      (relu.1): ReLU (inplace)
      (conv.1): Conv2d(192, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
      (relu.2): ReLU (inplace)
      (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (denselayer6): _DenseLayer (
      (norm.1): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True)
      (relu.1): ReLU (inplace)
      (conv.1): Conv2d(224, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
      (relu.2): ReLU (inplace)
      (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
  )
  (transition1): _Transition (
    (norm): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)
    (relu): ReLU (inplace)
    (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (pool): AvgPool2d (size=2, stride=2, padding=0, ceil_mode=False, count_include_pad=True)
  )
  (denseblock2): _DenseBlock (
    (denselayer1): _DenseLayer (
      (norm.1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
      (relu.1): ReLU (inplace)
      (conv.1): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
      (relu.2): ReLU (inplace)
      (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (denselayer2): _DenseLayer (
      (norm.1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True)
      (relu.1): ReLU (inplace)
      (conv.1): Conv2d(160, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
      (relu.2): ReLU (inplace)
      (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (denselayer3): _DenseLayer (
      (norm.1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True)
      (relu.1): ReLU (inplace)
      (conv.1): Conv2d(192, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
      (relu.2): ReLU (inplace)
      (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (denselayer4): _DenseLayer (
      (norm.1): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True)
      (relu.1): ReLU (inplace)
      (conv.1): Conv2d(224, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
      (relu.2): ReLU (inplace)
      (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (denselayer5): _DenseLayer (
      (norm.1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)
      (relu.1): ReLU (inplace)
      (conv.1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
      (relu.2): ReLU (inplace)
      (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (denselayer6): _DenseLayer (
      (norm.1): BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True)
      (relu.1): ReLU (inplace)
      (conv.1): Conv2d(288, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
      (relu.2): ReLU (inplace)
      (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (denselayer7): _DenseLayer (
      (norm.1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True)
      (relu.1): ReLU (inplace)
      (conv.1): Conv2d(320, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
      (relu.2): ReLU (inplace)
      (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (denselayer8): _DenseLayer (
      (norm.1): BatchNorm2d(352, eps=1e-05, momentum=0.1, affine=True)
      (relu.1): ReLU (inplace)
      (conv.1): Conv2d(352, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
      (relu.2): ReLU (inplace)
      (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (denselayer9): _DenseLayer (
      (norm.1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True)
      (relu.1): ReLU (inplace)
      (conv.1): Conv2d(384, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
      (relu.2): ReLU (inplace)
      (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (denselayer10): _DenseLayer (
      (norm.1): BatchNorm2d(416, eps=1e-05, momentum=0.1, affine=True)
      (relu.1): ReLU (inplace)
      (conv.1): Conv2d(416, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
      (relu.2): ReLU (inplace)
      (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (denselayer11): _DenseLayer (
      (norm.1): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True)
      (relu.1): ReLU (inplace)
      (conv.1): Conv2d(448, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
      (relu.2): ReLU (inplace)
      (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (denselayer12): _DenseLayer (
      (norm.1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True)
      (relu.1): ReLU (inplace)
      (conv.1): Conv2d(480, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
      (relu.2): ReLU (inplace)
      (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
  )
  (transition2): _Transition (
    (norm): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True)
    (relu): ReLU (inplace)
    (conv): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (pool): AvgPool2d (size=2, stride=2, padding=0, ceil_mode=False, count_include_pad=True)
  )
  (denseblock3): _DenseBlock (
    (denselayer1): _DenseLayer (
      (norm.1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)
      (relu.1): ReLU (inplace)
      (conv.1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
      (relu.2): ReLU (inplace)
      (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (denselayer2): _DenseLayer (
      (norm.1): BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True)
      (relu.1): ReLU (inplace)
      (conv.1): Conv2d(288, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
      (relu.2): ReLU (inplace)
      (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (denselayer3): _DenseLayer (
      (norm.1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True)
      (relu.1): ReLU (inplace)
      (conv.1): Conv2d(320, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
      (relu.2): ReLU (inplace)
      (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (denselayer4): _DenseLayer (
      (norm.1): BatchNorm2d(352, eps=1e-05, momentum=0.1, affine=True)
      (relu.1): ReLU (inplace)
      (conv.1): Conv2d(352, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
      (relu.2): ReLU (inplace)
      (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (denselayer5): _DenseLayer (
      (norm.1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True)
      (relu.1): ReLU (inplace)
      (conv.1): Conv2d(384, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
      (relu.2): ReLU (inplace)
      (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (denselayer6): _DenseLayer (
      (norm.1): BatchNorm2d(416, eps=1e-05, momentum=0.1, affine=True)
      (relu.1): ReLU (inplace)
      (conv.1): Conv2d(416, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
      (relu.2): ReLU (inplace)
      (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (denselayer7): _DenseLayer (
      (norm.1): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True)
      (relu.1): ReLU (inplace)
      (conv.1): Conv2d(448, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
      (relu.2): ReLU (inplace)
      (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (denselayer8): _DenseLayer (
      (norm.1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True)
      (relu.1): ReLU (inplace)
      (conv.1): Conv2d(480, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
      (relu.2): ReLU (inplace)
      (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (denselayer9): _DenseLayer (
      (norm.1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True)
      (relu.1): ReLU (inplace)
      (conv.1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
      (relu.2): ReLU (inplace)
      (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (denselayer10): _DenseLayer (
      (norm.1): BatchNorm2d(544, eps=1e-05, momentum=0.1, affine=True)
      (relu.1): ReLU (inplace)
      (conv.1): Conv2d(544, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
      (relu.2): ReLU (inplace)
      (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (denselayer11): _DenseLayer (
      (norm.1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True)
      (relu.1): ReLU (inplace)
      (conv.1): Conv2d(576, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
      (relu.2): ReLU (inplace)
      (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (denselayer12): _DenseLayer (
      (norm.1): BatchNorm2d(608, eps=1e-05, momentum=0.1, affine=True)
      (relu.1): ReLU (inplace)
      (conv.1): Conv2d(608, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
      (relu.2): ReLU (inplace)
      (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (denselayer13): _DenseLayer (
      (norm.1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True)
      (relu.1): ReLU (inplace)
      (conv.1): Conv2d(640, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
      (relu.2): ReLU (inplace)
      (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (denselayer14): _DenseLayer (
      (norm.1): BatchNorm2d(672, eps=1e-05, momentum=0.1, affine=True)
      (relu.1): ReLU (inplace)
      (conv.1): Conv2d(672, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
      (relu.2): ReLU (inplace)
      (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (denselayer15): _DenseLayer (
      (norm.1): BatchNorm2d(704, eps=1e-05, momentum=0.1, affine=True)
      (relu.1): ReLU (inplace)
      (conv.1): Conv2d(704, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
      (relu.2): ReLU (inplace)
      (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (denselayer16): _DenseLayer (
      (norm.1): BatchNorm2d(736, eps=1e-05, momentum=0.1, affine=True)
      (relu.1): ReLU (inplace)
      (conv.1): Conv2d(736, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
      (relu.2): ReLU (inplace)
      (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (denselayer17): _DenseLayer (
      (norm.1): BatchNorm2d(768, eps=1e-05, momentum=0.1, affine=True)
      (relu.1): ReLU (inplace)
      (conv.1): Conv2d(768, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
      (relu.2): ReLU (inplace)
      (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (denselayer18): _DenseLayer (
      (norm.1): BatchNorm2d(800, eps=1e-05, momentum=0.1, affine=True)
      (relu.1): ReLU (inplace)
      (conv.1): Conv2d(800, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
      (relu.2): ReLU (inplace)
      (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (denselayer19): _DenseLayer (
      (norm.1): BatchNorm2d(832, eps=1e-05, momentum=0.1, affine=True)
      (relu.1): ReLU (inplace)
      (conv.1): Conv2d(832, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
      (relu.2): ReLU (inplace)
      (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (denselayer20): _DenseLayer (
      (norm.1): BatchNorm2d(864, eps=1e-05, momentum=0.1, affine=True)
      (relu.1): ReLU (inplace)
      (conv.1): Conv2d(864, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
      (relu.2): ReLU (inplace)
      (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (denselayer21): _DenseLayer (
      (norm.1): BatchNorm2d(896, eps=1e-05, momentum=0.1, affine=True)
      (relu.1): ReLU (inplace)
      (conv.1): Conv2d(896, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
      (relu.2): ReLU (inplace)
      (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (denselayer22): _DenseLayer (
      (norm.1): BatchNorm2d(928, eps=1e-05, momentum=0.1, affine=True)
      (relu.1): ReLU (inplace)
      (conv.1): Conv2d(928, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
      (relu.2): ReLU (inplace)
      (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (denselayer23): _DenseLayer (
      (norm.1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True)
      (relu.1): ReLU (inplace)
      (conv.1): Conv2d(960, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
      (relu.2): ReLU (inplace)
      (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (denselayer24): _DenseLayer (
      (norm.1): BatchNorm2d(992, eps=1e-05, momentum=0.1, affine=True)
      (relu.1): ReLU (inplace)
      (conv.1): Conv2d(992, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
      (relu.2): ReLU (inplace)
      (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
  )
  (transition3): _Transition (
    (norm): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True)
    (relu): ReLU (inplace)
    (conv): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (pool): AvgPool2d (size=2, stride=2, padding=0, ceil_mode=False, count_include_pad=True)
  )
  (denseblock4): _DenseBlock (
    (denselayer1): _DenseLayer (
      (norm.1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True)
      (relu.1): ReLU (inplace)
      (conv.1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
      (relu.2): ReLU (inplace)
      (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (denselayer2): _DenseLayer (
      (norm.1): BatchNorm2d(544, eps=1e-05, momentum=0.1, affine=True)
      (relu.1): ReLU (inplace)
      (conv.1): Conv2d(544, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
      (relu.2): ReLU (inplace)
      (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (denselayer3): _DenseLayer (
      (norm.1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True)
      (relu.1): ReLU (inplace)
      (conv.1): Conv2d(576, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
      (relu.2): ReLU (inplace)
      (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (denselayer4): _DenseLayer (
      (norm.1): BatchNorm2d(608, eps=1e-05, momentum=0.1, affine=True)
      (relu.1): ReLU (inplace)
      (conv.1): Conv2d(608, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
      (relu.2): ReLU (inplace)
      (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (denselayer5): _DenseLayer (
      (norm.1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True)
      (relu.1): ReLU (inplace)
      (conv.1): Conv2d(640, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
      (relu.2): ReLU (inplace)
      (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (denselayer6): _DenseLayer (
      (norm.1): BatchNorm2d(672, eps=1e-05, momentum=0.1, affine=True)
      (relu.1): ReLU (inplace)
      (conv.1): Conv2d(672, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
      (relu.2): ReLU (inplace)
      (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (denselayer7): _DenseLayer (
      (norm.1): BatchNorm2d(704, eps=1e-05, momentum=0.1, affine=True)
      (relu.1): ReLU (inplace)
      (conv.1): Conv2d(704, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
      (relu.2): ReLU (inplace)
      (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (denselayer8): _DenseLayer (
      (norm.1): BatchNorm2d(736, eps=1e-05, momentum=0.1, affine=True)
      (relu.1): ReLU (inplace)
      (conv.1): Conv2d(736, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
      (relu.2): ReLU (inplace)
      (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (denselayer9): _DenseLayer (
      (norm.1): BatchNorm2d(768, eps=1e-05, momentum=0.1, affine=True)
      (relu.1): ReLU (inplace)
      (conv.1): Conv2d(768, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
      (relu.2): ReLU (inplace)
      (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (denselayer10): _DenseLayer (
      (norm.1): BatchNorm2d(800, eps=1e-05, momentum=0.1, affine=True)
      (relu.1): ReLU (inplace)
      (conv.1): Conv2d(800, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
      (relu.2): ReLU (inplace)
      (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (denselayer11): _DenseLayer (
      (norm.1): BatchNorm2d(832, eps=1e-05, momentum=0.1, affine=True)
      (relu.1): ReLU (inplace)
      (conv.1): Conv2d(832, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
      (relu.2): ReLU (inplace)
      (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (denselayer12): _DenseLayer (
      (norm.1): BatchNorm2d(864, eps=1e-05, momentum=0.1, affine=True)
      (relu.1): ReLU (inplace)
      (conv.1): Conv2d(864, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
      (relu.2): ReLU (inplace)
      (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (denselayer13): _DenseLayer (
      (norm.1): BatchNorm2d(896, eps=1e-05, momentum=0.1, affine=True)
      (relu.1): ReLU (inplace)
      (conv.1): Conv2d(896, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
      (relu.2): ReLU (inplace)
      (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (denselayer14): _DenseLayer (
      (norm.1): BatchNorm2d(928, eps=1e-05, momentum=0.1, affine=True)
      (relu.1): ReLU (inplace)
      (conv.1): Conv2d(928, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
      (relu.2): ReLU (inplace)
      (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (denselayer15): _DenseLayer (
      (norm.1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True)
      (relu.1): ReLU (inplace)
      (conv.1): Conv2d(960, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
      (relu.2): ReLU (inplace)
      (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (denselayer16): _DenseLayer (
      (norm.1): BatchNorm2d(992, eps=1e-05, momentum=0.1, affine=True)
      (relu.1): ReLU (inplace)
      (conv.1): Conv2d(992, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
      (relu.2): ReLU (inplace)
      (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
  )
  (norm5): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True)
)
base.features.conv0:Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
base.features.norm0:BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True)
base.features.relu0:ReLU (inplace)
base.features.pool0:MaxPool2d (size=(3, 3), stride=(2, 2), padding=(1, 1), dilation=(1, 1))
base.features.denseblock1:_DenseBlock (
  (denselayer1): _DenseLayer (
    (norm.1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True)
    (relu.1): ReLU (inplace)
    (conv.1): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
    (relu.2): ReLU (inplace)
    (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  )
  (denselayer2): _DenseLayer (
    (norm.1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True)
    (relu.1): ReLU (inplace)
    (conv.1): Conv2d(96, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
    (relu.2): ReLU (inplace)
    (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  )
  (denselayer3): _DenseLayer (
    (norm.1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
    (relu.1): ReLU (inplace)
    (conv.1): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
    (relu.2): ReLU (inplace)
    (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  )
  (denselayer4): _DenseLayer (
    (norm.1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True)
    (relu.1): ReLU (inplace)
    (conv.1): Conv2d(160, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
    (relu.2): ReLU (inplace)
    (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  )
  (denselayer5): _DenseLayer (
    (norm.1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True)
    (relu.1): ReLU (inplace)
    (conv.1): Conv2d(192, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
    (relu.2): ReLU (inplace)
    (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  )
  (denselayer6): _DenseLayer (
    (norm.1): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True)
    (relu.1): ReLU (inplace)
    (conv.1): Conv2d(224, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
    (relu.2): ReLU (inplace)
    (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  )
)
base.features.denseblock1.denselayer1:_DenseLayer (
  (norm.1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True)
  (relu.1): ReLU (inplace)
  (conv.1): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
  (relu.2): ReLU (inplace)
  (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
)
base.features.denseblock1.denselayer1.norm.1:BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True)
base.features.denseblock1.denselayer1.relu.1:ReLU (inplace)
base.features.denseblock1.denselayer1.conv.1:Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
base.features.denseblock1.denselayer1.norm.2:BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
base.features.denseblock1.denselayer1.relu.2:ReLU (inplace)
base.features.denseblock1.denselayer1.conv.2:Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
base.features.denseblock1.denselayer2:_DenseLayer (
  (norm.1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True)
  (relu.1): ReLU (inplace)
  (conv.1): Conv2d(96, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
  (relu.2): ReLU (inplace)
  (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
)
base.features.denseblock1.denselayer2.norm.1:BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True)
base.features.denseblock1.denselayer2.relu.1:ReLU (inplace)
base.features.denseblock1.denselayer2.conv.1:Conv2d(96, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
base.features.denseblock1.denselayer2.norm.2:BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
base.features.denseblock1.denselayer2.relu.2:ReLU (inplace)
base.features.denseblock1.denselayer2.conv.2:Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
base.features.denseblock1.denselayer3:_DenseLayer (
  (norm.1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
  (relu.1): ReLU (inplace)
  (conv.1): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
  (relu.2): ReLU (inplace)
  (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
)
base.features.denseblock1.denselayer3.norm.1:BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
base.features.denseblock1.denselayer3.relu.1:ReLU (inplace)
base.features.denseblock1.denselayer3.conv.1:Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
base.features.denseblock1.denselayer3.norm.2:BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
base.features.denseblock1.denselayer3.relu.2:ReLU (inplace)
base.features.denseblock1.denselayer3.conv.2:Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
base.features.denseblock1.denselayer4:_DenseLayer (
  (norm.1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True)
  (relu.1): ReLU (inplace)
  (conv.1): Conv2d(160, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
  (relu.2): ReLU (inplace)
  (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
)
base.features.denseblock1.denselayer4.norm.1:BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True)
base.features.denseblock1.denselayer4.relu.1:ReLU (inplace)
base.features.denseblock1.denselayer4.conv.1:Conv2d(160, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
base.features.denseblock1.denselayer4.norm.2:BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
base.features.denseblock1.denselayer4.relu.2:ReLU (inplace)
base.features.denseblock1.denselayer4.conv.2:Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
base.features.denseblock1.denselayer5:_DenseLayer (
  (norm.1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True)
  (relu.1): ReLU (inplace)
  (conv.1): Conv2d(192, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
  (relu.2): ReLU (inplace)
  (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
)
base.features.denseblock1.denselayer5.norm.1:BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True)
base.features.denseblock1.denselayer5.relu.1:ReLU (inplace)
base.features.denseblock1.denselayer5.conv.1:Conv2d(192, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
base.features.denseblock1.denselayer5.norm.2:BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
base.features.denseblock1.denselayer5.relu.2:ReLU (inplace)
base.features.denseblock1.denselayer5.conv.2:Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
base.features.denseblock1.denselayer6:_DenseLayer (
  (norm.1): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True)
  (relu.1): ReLU (inplace)
  (conv.1): Conv2d(224, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
  (relu.2): ReLU (inplace)
  (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
)
base.features.denseblock1.denselayer6.norm.1:BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True)
base.features.denseblock1.denselayer6.relu.1:ReLU (inplace)
base.features.denseblock1.denselayer6.conv.1:Conv2d(224, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
base.features.denseblock1.denselayer6.norm.2:BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
base.features.denseblock1.denselayer6.relu.2:ReLU (inplace)
base.features.denseblock1.denselayer6.conv.2:Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
base.features.transition1:_Transition (
  (norm): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)
  (relu): ReLU (inplace)
  (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (pool): AvgPool2d (size=2, stride=2, padding=0, ceil_mode=False, count_include_pad=True)
)
base.features.transition1.norm:BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)
base.features.transition1.relu:ReLU (inplace)
base.features.transition1.conv:Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
base.features.transition1.pool:AvgPool2d (size=2, stride=2, padding=0, ceil_mode=False, count_include_pad=True)
base.features.denseblock2:_DenseBlock (
  (denselayer1): _DenseLayer (
    (norm.1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
    (relu.1): ReLU (inplace)
    (conv.1): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
    (relu.2): ReLU (inplace)
    (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  )
  (denselayer2): _DenseLayer (
    (norm.1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True)
    (relu.1): ReLU (inplace)
    (conv.1): Conv2d(160, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
    (relu.2): ReLU (inplace)
    (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  )
  (denselayer3): _DenseLayer (
    (norm.1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True)
    (relu.1): ReLU (inplace)
    (conv.1): Conv2d(192, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
    (relu.2): ReLU (inplace)
    (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  )
  (denselayer4): _DenseLayer (
    (norm.1): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True)
    (relu.1): ReLU (inplace)
    (conv.1): Conv2d(224, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
    (relu.2): ReLU (inplace)
    (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  )
  (denselayer5): _DenseLayer (
    (norm.1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)
    (relu.1): ReLU (inplace)
    (conv.1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
    (relu.2): ReLU (inplace)
    (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  )
  (denselayer6): _DenseLayer (
    (norm.1): BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True)
    (relu.1): ReLU (inplace)
    (conv.1): Conv2d(288, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
    (relu.2): ReLU (inplace)
    (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  )
  (denselayer7): _DenseLayer (
    (norm.1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True)
    (relu.1): ReLU (inplace)
    (conv.1): Conv2d(320, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
    (relu.2): ReLU (inplace)
    (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  )
  (denselayer8): _DenseLayer (
    (norm.1): BatchNorm2d(352, eps=1e-05, momentum=0.1, affine=True)
    (relu.1): ReLU (inplace)
    (conv.1): Conv2d(352, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
    (relu.2): ReLU (inplace)
    (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  )
  (denselayer9): _DenseLayer (
    (norm.1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True)
    (relu.1): ReLU (inplace)
    (conv.1): Conv2d(384, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
    (relu.2): ReLU (inplace)
    (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  )
  (denselayer10): _DenseLayer (
    (norm.1): BatchNorm2d(416, eps=1e-05, momentum=0.1, affine=True)
    (relu.1): ReLU (inplace)
    (conv.1): Conv2d(416, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
    (relu.2): ReLU (inplace)
    (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  )
  (denselayer11): _DenseLayer (
    (norm.1): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True)
    (relu.1): ReLU (inplace)
    (conv.1): Conv2d(448, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
    (relu.2): ReLU (inplace)
    (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  )
  (denselayer12): _DenseLayer (
    (norm.1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True)
    (relu.1): ReLU (inplace)
    (conv.1): Conv2d(480, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
    (relu.2): ReLU (inplace)
    (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  )
)
base.features.denseblock2.denselayer1:_DenseLayer (
  (norm.1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
  (relu.1): ReLU (inplace)
  (conv.1): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
  (relu.2): ReLU (inplace)
  (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
)
base.features.denseblock2.denselayer1.norm.1:BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
base.features.denseblock2.denselayer1.relu.1:ReLU (inplace)
base.features.denseblock2.denselayer1.conv.1:Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
base.features.denseblock2.denselayer1.norm.2:BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
base.features.denseblock2.denselayer1.relu.2:ReLU (inplace)
base.features.denseblock2.denselayer1.conv.2:Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
base.features.denseblock2.denselayer2:_DenseLayer (
  (norm.1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True)
  (relu.1): ReLU (inplace)
  (conv.1): Conv2d(160, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
  (relu.2): ReLU (inplace)
  (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
)
base.features.denseblock2.denselayer2.norm.1:BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True)
base.features.denseblock2.denselayer2.relu.1:ReLU (inplace)
base.features.denseblock2.denselayer2.conv.1:Conv2d(160, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
base.features.denseblock2.denselayer2.norm.2:BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
base.features.denseblock2.denselayer2.relu.2:ReLU (inplace)
base.features.denseblock2.denselayer2.conv.2:Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
base.features.denseblock2.denselayer3:_DenseLayer (
  (norm.1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True)
  (relu.1): ReLU (inplace)
  (conv.1): Conv2d(192, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
  (relu.2): ReLU (inplace)
  (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
)
base.features.denseblock2.denselayer3.norm.1:BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True)
base.features.denseblock2.denselayer3.relu.1:ReLU (inplace)
base.features.denseblock2.denselayer3.conv.1:Conv2d(192, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
base.features.denseblock2.denselayer3.norm.2:BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
base.features.denseblock2.denselayer3.relu.2:ReLU (inplace)
base.features.denseblock2.denselayer3.conv.2:Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
base.features.denseblock2.denselayer4:_DenseLayer (
  (norm.1): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True)
  (relu.1): ReLU (inplace)
  (conv.1): Conv2d(224, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
  (relu.2): ReLU (inplace)
  (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
)
base.features.denseblock2.denselayer4.norm.1:BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True)
base.features.denseblock2.denselayer4.relu.1:ReLU (inplace)
base.features.denseblock2.denselayer4.conv.1:Conv2d(224, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
base.features.denseblock2.denselayer4.norm.2:BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
base.features.denseblock2.denselayer4.relu.2:ReLU (inplace)
base.features.denseblock2.denselayer4.conv.2:Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
base.features.denseblock2.denselayer5:_DenseLayer (
  (norm.1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)
  (relu.1): ReLU (inplace)
  (conv.1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
  (relu.2): ReLU (inplace)
  (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
)
base.features.denseblock2.denselayer5.norm.1:BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)
base.features.denseblock2.denselayer5.relu.1:ReLU (inplace)
base.features.denseblock2.denselayer5.conv.1:Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
base.features.denseblock2.denselayer5.norm.2:BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
base.features.denseblock2.denselayer5.relu.2:ReLU (inplace)
base.features.denseblock2.denselayer5.conv.2:Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
base.features.denseblock2.denselayer6:_DenseLayer (
  (norm.1): BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True)
  (relu.1): ReLU (inplace)
  (conv.1): Conv2d(288, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
  (relu.2): ReLU (inplace)
  (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
)
base.features.denseblock2.denselayer6.norm.1:BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True)
base.features.denseblock2.denselayer6.relu.1:ReLU (inplace)
base.features.denseblock2.denselayer6.conv.1:Conv2d(288, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
base.features.denseblock2.denselayer6.norm.2:BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
base.features.denseblock2.denselayer6.relu.2:ReLU (inplace)
base.features.denseblock2.denselayer6.conv.2:Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
base.features.denseblock2.denselayer7:_DenseLayer (
  (norm.1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True)
  (relu.1): ReLU (inplace)
  (conv.1): Conv2d(320, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
  (relu.2): ReLU (inplace)
  (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
)
base.features.denseblock2.denselayer7.norm.1:BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True)
base.features.denseblock2.denselayer7.relu.1:ReLU (inplace)
base.features.denseblock2.denselayer7.conv.1:Conv2d(320, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
base.features.denseblock2.denselayer7.norm.2:BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
base.features.denseblock2.denselayer7.relu.2:ReLU (inplace)
base.features.denseblock2.denselayer7.conv.2:Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
base.features.denseblock2.denselayer8:_DenseLayer (
  (norm.1): BatchNorm2d(352, eps=1e-05, momentum=0.1, affine=True)
  (relu.1): ReLU (inplace)
  (conv.1): Conv2d(352, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
  (relu.2): ReLU (inplace)
  (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
)
base.features.denseblock2.denselayer8.norm.1:BatchNorm2d(352, eps=1e-05, momentum=0.1, affine=True)
base.features.denseblock2.denselayer8.relu.1:ReLU (inplace)
base.features.denseblock2.denselayer8.conv.1:Conv2d(352, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
base.features.denseblock2.denselayer8.norm.2:BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
base.features.denseblock2.denselayer8.relu.2:ReLU (inplace)
base.features.denseblock2.denselayer8.conv.2:Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
base.features.denseblock2.denselayer9:_DenseLayer (
  (norm.1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True)
  (relu.1): ReLU (inplace)
  (conv.1): Conv2d(384, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
  (relu.2): ReLU (inplace)
  (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
)
base.features.denseblock2.denselayer9.norm.1:BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True)
base.features.denseblock2.denselayer9.relu.1:ReLU (inplace)
base.features.denseblock2.denselayer9.conv.1:Conv2d(384, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
base.features.denseblock2.denselayer9.norm.2:BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
base.features.denseblock2.denselayer9.relu.2:ReLU (inplace)
base.features.denseblock2.denselayer9.conv.2:Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
base.features.denseblock2.denselayer10:_DenseLayer (
  (norm.1): BatchNorm2d(416, eps=1e-05, momentum=0.1, affine=True)
  (relu.1): ReLU (inplace)
  (conv.1): Conv2d(416, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
  (relu.2): ReLU (inplace)
  (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
)
base.features.denseblock2.denselayer10.norm.1:BatchNorm2d(416, eps=1e-05, momentum=0.1, affine=True)
base.features.denseblock2.denselayer10.relu.1:ReLU (inplace)
base.features.denseblock2.denselayer10.conv.1:Conv2d(416, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
base.features.denseblock2.denselayer10.norm.2:BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
base.features.denseblock2.denselayer10.relu.2:ReLU (inplace)
base.features.denseblock2.denselayer10.conv.2:Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
base.features.denseblock2.denselayer11:_DenseLayer (
  (norm.1): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True)
  (relu.1): ReLU (inplace)
  (conv.1): Conv2d(448, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
  (relu.2): ReLU (inplace)
  (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
)
base.features.denseblock2.denselayer11.norm.1:BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True)
base.features.denseblock2.denselayer11.relu.1:ReLU (inplace)
base.features.denseblock2.denselayer11.conv.1:Conv2d(448, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
base.features.denseblock2.denselayer11.norm.2:BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
base.features.denseblock2.denselayer11.relu.2:ReLU (inplace)
base.features.denseblock2.denselayer11.conv.2:Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
base.features.denseblock2.denselayer12:_DenseLayer (
  (norm.1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True)
  (relu.1): ReLU (inplace)
  (conv.1): Conv2d(480, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
  (relu.2): ReLU (inplace)
  (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
)
base.features.denseblock2.denselayer12.norm.1:BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True)
base.features.denseblock2.denselayer12.relu.1:ReLU (inplace)
base.features.denseblock2.denselayer12.conv.1:Conv2d(480, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
base.features.denseblock2.denselayer12.norm.2:BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
base.features.denseblock2.denselayer12.relu.2:ReLU (inplace)
base.features.denseblock2.denselayer12.conv.2:Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
base.features.transition2:_Transition (
  (norm): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True)
  (relu): ReLU (inplace)
  (conv): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (pool): AvgPool2d (size=2, stride=2, padding=0, ceil_mode=False, count_include_pad=True)
)
base.features.transition2.norm:BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True)
base.features.transition2.relu:ReLU (inplace)
base.features.transition2.conv:Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
base.features.transition2.pool:AvgPool2d (size=2, stride=2, padding=0, ceil_mode=False, count_include_pad=True)
base.features.denseblock3:_DenseBlock (
  (denselayer1): _DenseLayer (
    (norm.1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)
    (relu.1): ReLU (inplace)
    (conv.1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
    (relu.2): ReLU (inplace)
    (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  )
  (denselayer2): _DenseLayer (
    (norm.1): BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True)
    (relu.1): ReLU (inplace)
    (conv.1): Conv2d(288, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
    (relu.2): ReLU (inplace)
    (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  )
  (denselayer3): _DenseLayer (
    (norm.1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True)
    (relu.1): ReLU (inplace)
    (conv.1): Conv2d(320, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
    (relu.2): ReLU (inplace)
    (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  )
  (denselayer4): _DenseLayer (
    (norm.1): BatchNorm2d(352, eps=1e-05, momentum=0.1, affine=True)
    (relu.1): ReLU (inplace)
    (conv.1): Conv2d(352, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
    (relu.2): ReLU (inplace)
    (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  )
  (denselayer5): _DenseLayer (
    (norm.1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True)
    (relu.1): ReLU (inplace)
    (conv.1): Conv2d(384, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
    (relu.2): ReLU (inplace)
    (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  )
  (denselayer6): _DenseLayer (
    (norm.1): BatchNorm2d(416, eps=1e-05, momentum=0.1, affine=True)
    (relu.1): ReLU (inplace)
    (conv.1): Conv2d(416, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
    (relu.2): ReLU (inplace)
    (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  )
  (denselayer7): _DenseLayer (
    (norm.1): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True)
    (relu.1): ReLU (inplace)
    (conv.1): Conv2d(448, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
    (relu.2): ReLU (inplace)
    (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  )
  (denselayer8): _DenseLayer (
    (norm.1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True)
    (relu.1): ReLU (inplace)
    (conv.1): Conv2d(480, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
    (relu.2): ReLU (inplace)
    (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  )
  (denselayer9): _DenseLayer (
    (norm.1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True)
    (relu.1): ReLU (inplace)
    (conv.1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
    (relu.2): ReLU (inplace)
    (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  )
  (denselayer10): _DenseLayer (
    (norm.1): BatchNorm2d(544, eps=1e-05, momentum=0.1, affine=True)
    (relu.1): ReLU (inplace)
    (conv.1): Conv2d(544, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
    (relu.2): ReLU (inplace)
    (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  )
  (denselayer11): _DenseLayer (
    (norm.1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True)
    (relu.1): ReLU (inplace)
    (conv.1): Conv2d(576, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
    (relu.2): ReLU (inplace)
    (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  )
  (denselayer12): _DenseLayer (
    (norm.1): BatchNorm2d(608, eps=1e-05, momentum=0.1, affine=True)
    (relu.1): ReLU (inplace)
    (conv.1): Conv2d(608, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
    (relu.2): ReLU (inplace)
    (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  )
  (denselayer13): _DenseLayer (
    (norm.1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True)
    (relu.1): ReLU (inplace)
    (conv.1): Conv2d(640, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
    (relu.2): ReLU (inplace)
    (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  )
  (denselayer14): _DenseLayer (
    (norm.1): BatchNorm2d(672, eps=1e-05, momentum=0.1, affine=True)
    (relu.1): ReLU (inplace)
    (conv.1): Conv2d(672, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
    (relu.2): ReLU (inplace)
    (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  )
  (denselayer15): _DenseLayer (
    (norm.1): BatchNorm2d(704, eps=1e-05, momentum=0.1, affine=True)
    (relu.1): ReLU (inplace)
    (conv.1): Conv2d(704, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
    (relu.2): ReLU (inplace)
    (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  )
  (denselayer16): _DenseLayer (
    (norm.1): BatchNorm2d(736, eps=1e-05, momentum=0.1, affine=True)
    (relu.1): ReLU (inplace)
    (conv.1): Conv2d(736, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
    (relu.2): ReLU (inplace)
    (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  )
  (denselayer17): _DenseLayer (
    (norm.1): BatchNorm2d(768, eps=1e-05, momentum=0.1, affine=True)
    (relu.1): ReLU (inplace)
    (conv.1): Conv2d(768, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
    (relu.2): ReLU (inplace)
    (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  )
  (denselayer18): _DenseLayer (
    (norm.1): BatchNorm2d(800, eps=1e-05, momentum=0.1, affine=True)
    (relu.1): ReLU (inplace)
    (conv.1): Conv2d(800, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
    (relu.2): ReLU (inplace)
    (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  )
  (denselayer19): _DenseLayer (
    (norm.1): BatchNorm2d(832, eps=1e-05, momentum=0.1, affine=True)
    (relu.1): ReLU (inplace)
    (conv.1): Conv2d(832, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
    (relu.2): ReLU (inplace)
    (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  )
  (denselayer20): _DenseLayer (
    (norm.1): BatchNorm2d(864, eps=1e-05, momentum=0.1, affine=True)
    (relu.1): ReLU (inplace)
    (conv.1): Conv2d(864, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
    (relu.2): ReLU (inplace)
    (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  )
  (denselayer21): _DenseLayer (
    (norm.1): BatchNorm2d(896, eps=1e-05, momentum=0.1, affine=True)
    (relu.1): ReLU (inplace)
    (conv.1): Conv2d(896, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
    (relu.2): ReLU (inplace)
    (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  )
  (denselayer22): _DenseLayer (
    (norm.1): BatchNorm2d(928, eps=1e-05, momentum=0.1, affine=True)
    (relu.1): ReLU (inplace)
    (conv.1): Conv2d(928, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
    (relu.2): ReLU (inplace)
    (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  )
  (denselayer23): _DenseLayer (
    (norm.1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True)
    (relu.1): ReLU (inplace)
    (conv.1): Conv2d(960, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
    (relu.2): ReLU (inplace)
    (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  )
  (denselayer24): _DenseLayer (
    (norm.1): BatchNorm2d(992, eps=1e-05, momentum=0.1, affine=True)
    (relu.1): ReLU (inplace)
    (conv.1): Conv2d(992, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
    (relu.2): ReLU (inplace)
    (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  )
)
base.features.denseblock3.denselayer1:_DenseLayer (
  (norm.1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)
  (relu.1): ReLU (inplace)
  (conv.1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
  (relu.2): ReLU (inplace)
  (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
)
base.features.denseblock3.denselayer1.norm.1:BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)
base.features.denseblock3.denselayer1.relu.1:ReLU (inplace)
base.features.denseblock3.denselayer1.conv.1:Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
base.features.denseblock3.denselayer1.norm.2:BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
base.features.denseblock3.denselayer1.relu.2:ReLU (inplace)
base.features.denseblock3.denselayer1.conv.2:Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
base.features.denseblock3.denselayer2:_DenseLayer (
  (norm.1): BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True)
  (relu.1): ReLU (inplace)
  (conv.1): Conv2d(288, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
  (relu.2): ReLU (inplace)
  (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
)
base.features.denseblock3.denselayer2.norm.1:BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True)
base.features.denseblock3.denselayer2.relu.1:ReLU (inplace)
base.features.denseblock3.denselayer2.conv.1:Conv2d(288, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
base.features.denseblock3.denselayer2.norm.2:BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
base.features.denseblock3.denselayer2.relu.2:ReLU (inplace)
base.features.denseblock3.denselayer2.conv.2:Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
base.features.denseblock3.denselayer3:_DenseLayer (
  (norm.1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True)
  (relu.1): ReLU (inplace)
  (conv.1): Conv2d(320, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
  (relu.2): ReLU (inplace)
  (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
)
base.features.denseblock3.denselayer3.norm.1:BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True)
base.features.denseblock3.denselayer3.relu.1:ReLU (inplace)
base.features.denseblock3.denselayer3.conv.1:Conv2d(320, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
base.features.denseblock3.denselayer3.norm.2:BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
base.features.denseblock3.denselayer3.relu.2:ReLU (inplace)
base.features.denseblock3.denselayer3.conv.2:Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
base.features.denseblock3.denselayer4:_DenseLayer (
  (norm.1): BatchNorm2d(352, eps=1e-05, momentum=0.1, affine=True)
  (relu.1): ReLU (inplace)
  (conv.1): Conv2d(352, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
  (relu.2): ReLU (inplace)
  (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
)
base.features.denseblock3.denselayer4.norm.1:BatchNorm2d(352, eps=1e-05, momentum=0.1, affine=True)
base.features.denseblock3.denselayer4.relu.1:ReLU (inplace)
base.features.denseblock3.denselayer4.conv.1:Conv2d(352, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
base.features.denseblock3.denselayer4.norm.2:BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
base.features.denseblock3.denselayer4.relu.2:ReLU (inplace)
base.features.denseblock3.denselayer4.conv.2:Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
base.features.denseblock3.denselayer5:_DenseLayer (
  (norm.1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True)
  (relu.1): ReLU (inplace)
  (conv.1): Conv2d(384, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
  (relu.2): ReLU (inplace)
  (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
)
base.features.denseblock3.denselayer5.norm.1:BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True)
base.features.denseblock3.denselayer5.relu.1:ReLU (inplace)
base.features.denseblock3.denselayer5.conv.1:Conv2d(384, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
base.features.denseblock3.denselayer5.norm.2:BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
base.features.denseblock3.denselayer5.relu.2:ReLU (inplace)
base.features.denseblock3.denselayer5.conv.2:Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
base.features.denseblock3.denselayer6:_DenseLayer (
  (norm.1): BatchNorm2d(416, eps=1e-05, momentum=0.1, affine=True)
  (relu.1): ReLU (inplace)
  (conv.1): Conv2d(416, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
  (relu.2): ReLU (inplace)
  (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
)
base.features.denseblock3.denselayer6.norm.1:BatchNorm2d(416, eps=1e-05, momentum=0.1, affine=True)
base.features.denseblock3.denselayer6.relu.1:ReLU (inplace)
base.features.denseblock3.denselayer6.conv.1:Conv2d(416, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
base.features.denseblock3.denselayer6.norm.2:BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
base.features.denseblock3.denselayer6.relu.2:ReLU (inplace)
base.features.denseblock3.denselayer6.conv.2:Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
base.features.denseblock3.denselayer7:_DenseLayer (
  (norm.1): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True)
  (relu.1): ReLU (inplace)
  (conv.1): Conv2d(448, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
  (relu.2): ReLU (inplace)
  (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
)
base.features.denseblock3.denselayer7.norm.1:BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True)
base.features.denseblock3.denselayer7.relu.1:ReLU (inplace)
base.features.denseblock3.denselayer7.conv.1:Conv2d(448, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
base.features.denseblock3.denselayer7.norm.2:BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
base.features.denseblock3.denselayer7.relu.2:ReLU (inplace)
base.features.denseblock3.denselayer7.conv.2:Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
base.features.denseblock3.denselayer8:_DenseLayer (
  (norm.1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True)
  (relu.1): ReLU (inplace)
  (conv.1): Conv2d(480, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
  (relu.2): ReLU (inplace)
  (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
)
base.features.denseblock3.denselayer8.norm.1:BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True)
base.features.denseblock3.denselayer8.relu.1:ReLU (inplace)
base.features.denseblock3.denselayer8.conv.1:Conv2d(480, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
base.features.denseblock3.denselayer8.norm.2:BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
base.features.denseblock3.denselayer8.relu.2:ReLU (inplace)
base.features.denseblock3.denselayer8.conv.2:Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
base.features.denseblock3.denselayer9:_DenseLayer (
  (norm.1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True)
  (relu.1): ReLU (inplace)
  (conv.1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
  (relu.2): ReLU (inplace)
  (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
)
base.features.denseblock3.denselayer9.norm.1:BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True)
base.features.denseblock3.denselayer9.relu.1:ReLU (inplace)
base.features.denseblock3.denselayer9.conv.1:Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
base.features.denseblock3.denselayer9.norm.2:BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
base.features.denseblock3.denselayer9.relu.2:ReLU (inplace)
base.features.denseblock3.denselayer9.conv.2:Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
base.features.denseblock3.denselayer10:_DenseLayer (
  (norm.1): BatchNorm2d(544, eps=1e-05, momentum=0.1, affine=True)
  (relu.1): ReLU (inplace)
  (conv.1): Conv2d(544, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
  (relu.2): ReLU (inplace)
  (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
)
base.features.denseblock3.denselayer10.norm.1:BatchNorm2d(544, eps=1e-05, momentum=0.1, affine=True)
base.features.denseblock3.denselayer10.relu.1:ReLU (inplace)
base.features.denseblock3.denselayer10.conv.1:Conv2d(544, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
base.features.denseblock3.denselayer10.norm.2:BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
base.features.denseblock3.denselayer10.relu.2:ReLU (inplace)
base.features.denseblock3.denselayer10.conv.2:Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
base.features.denseblock3.denselayer11:_DenseLayer (
  (norm.1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True)
  (relu.1): ReLU (inplace)
  (conv.1): Conv2d(576, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
  (relu.2): ReLU (inplace)
  (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
)
base.features.denseblock3.denselayer11.norm.1:BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True)
base.features.denseblock3.denselayer11.relu.1:ReLU (inplace)
base.features.denseblock3.denselayer11.conv.1:Conv2d(576, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
base.features.denseblock3.denselayer11.norm.2:BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
base.features.denseblock3.denselayer11.relu.2:ReLU (inplace)
base.features.denseblock3.denselayer11.conv.2:Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
base.features.denseblock3.denselayer12:_DenseLayer (
  (norm.1): BatchNorm2d(608, eps=1e-05, momentum=0.1, affine=True)
  (relu.1): ReLU (inplace)
  (conv.1): Conv2d(608, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
  (relu.2): ReLU (inplace)
  (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
)
base.features.denseblock3.denselayer12.norm.1:BatchNorm2d(608, eps=1e-05, momentum=0.1, affine=True)
base.features.denseblock3.denselayer12.relu.1:ReLU (inplace)
base.features.denseblock3.denselayer12.conv.1:Conv2d(608, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
base.features.denseblock3.denselayer12.norm.2:BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
base.features.denseblock3.denselayer12.relu.2:ReLU (inplace)
base.features.denseblock3.denselayer12.conv.2:Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
base.features.denseblock3.denselayer13:_DenseLayer (
  (norm.1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True)
  (relu.1): ReLU (inplace)
  (conv.1): Conv2d(640, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
  (relu.2): ReLU (inplace)
  (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
)
base.features.denseblock3.denselayer13.norm.1:BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True)
base.features.denseblock3.denselayer13.relu.1:ReLU (inplace)
base.features.denseblock3.denselayer13.conv.1:Conv2d(640, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
base.features.denseblock3.denselayer13.norm.2:BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
base.features.denseblock3.denselayer13.relu.2:ReLU (inplace)
base.features.denseblock3.denselayer13.conv.2:Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
base.features.denseblock3.denselayer14:_DenseLayer (
  (norm.1): BatchNorm2d(672, eps=1e-05, momentum=0.1, affine=True)
  (relu.1): ReLU (inplace)
  (conv.1): Conv2d(672, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
  (relu.2): ReLU (inplace)
  (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
)
base.features.denseblock3.denselayer14.norm.1:BatchNorm2d(672, eps=1e-05, momentum=0.1, affine=True)
base.features.denseblock3.denselayer14.relu.1:ReLU (inplace)
base.features.denseblock3.denselayer14.conv.1:Conv2d(672, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
base.features.denseblock3.denselayer14.norm.2:BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
base.features.denseblock3.denselayer14.relu.2:ReLU (inplace)
base.features.denseblock3.denselayer14.conv.2:Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
base.features.denseblock3.denselayer15:_DenseLayer (
  (norm.1): BatchNorm2d(704, eps=1e-05, momentum=0.1, affine=True)
  (relu.1): ReLU (inplace)
  (conv.1): Conv2d(704, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
  (relu.2): ReLU (inplace)
  (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
)
base.features.denseblock3.denselayer15.norm.1:BatchNorm2d(704, eps=1e-05, momentum=0.1, affine=True)
base.features.denseblock3.denselayer15.relu.1:ReLU (inplace)
base.features.denseblock3.denselayer15.conv.1:Conv2d(704, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
base.features.denseblock3.denselayer15.norm.2:BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
base.features.denseblock3.denselayer15.relu.2:ReLU (inplace)
base.features.denseblock3.denselayer15.conv.2:Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
base.features.denseblock3.denselayer16:_DenseLayer (
  (norm.1): BatchNorm2d(736, eps=1e-05, momentum=0.1, affine=True)
  (relu.1): ReLU (inplace)
  (conv.1): Conv2d(736, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
  (relu.2): ReLU (inplace)
  (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
)
base.features.denseblock3.denselayer16.norm.1:BatchNorm2d(736, eps=1e-05, momentum=0.1, affine=True)
base.features.denseblock3.denselayer16.relu.1:ReLU (inplace)
base.features.denseblock3.denselayer16.conv.1:Conv2d(736, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
base.features.denseblock3.denselayer16.norm.2:BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
base.features.denseblock3.denselayer16.relu.2:ReLU (inplace)
base.features.denseblock3.denselayer16.conv.2:Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
base.features.denseblock3.denselayer17:_DenseLayer (
  (norm.1): BatchNorm2d(768, eps=1e-05, momentum=0.1, affine=True)
  (relu.1): ReLU (inplace)
  (conv.1): Conv2d(768, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
  (relu.2): ReLU (inplace)
  (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
)
base.features.denseblock3.denselayer17.norm.1:BatchNorm2d(768, eps=1e-05, momentum=0.1, affine=True)
base.features.denseblock3.denselayer17.relu.1:ReLU (inplace)
base.features.denseblock3.denselayer17.conv.1:Conv2d(768, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
base.features.denseblock3.denselayer17.norm.2:BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
base.features.denseblock3.denselayer17.relu.2:ReLU (inplace)
base.features.denseblock3.denselayer17.conv.2:Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
base.features.denseblock3.denselayer18:_DenseLayer (
  (norm.1): BatchNorm2d(800, eps=1e-05, momentum=0.1, affine=True)
  (relu.1): ReLU (inplace)
  (conv.1): Conv2d(800, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
  (relu.2): ReLU (inplace)
  (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
)
base.features.denseblock3.denselayer18.norm.1:BatchNorm2d(800, eps=1e-05, momentum=0.1, affine=True)
base.features.denseblock3.denselayer18.relu.1:ReLU (inplace)
base.features.denseblock3.denselayer18.conv.1:Conv2d(800, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
base.features.denseblock3.denselayer18.norm.2:BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
base.features.denseblock3.denselayer18.relu.2:ReLU (inplace)
base.features.denseblock3.denselayer18.conv.2:Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
base.features.denseblock3.denselayer19:_DenseLayer (
  (norm.1): BatchNorm2d(832, eps=1e-05, momentum=0.1, affine=True)
  (relu.1): ReLU (inplace)
  (conv.1): Conv2d(832, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
  (relu.2): ReLU (inplace)
  (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
)
base.features.denseblock3.denselayer19.norm.1:BatchNorm2d(832, eps=1e-05, momentum=0.1, affine=True)
base.features.denseblock3.denselayer19.relu.1:ReLU (inplace)
base.features.denseblock3.denselayer19.conv.1:Conv2d(832, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
base.features.denseblock3.denselayer19.norm.2:BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
base.features.denseblock3.denselayer19.relu.2:ReLU (inplace)
base.features.denseblock3.denselayer19.conv.2:Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
base.features.denseblock3.denselayer20:_DenseLayer (
  (norm.1): BatchNorm2d(864, eps=1e-05, momentum=0.1, affine=True)
  (relu.1): ReLU (inplace)
  (conv.1): Conv2d(864, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
  (relu.2): ReLU (inplace)
  (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
)
base.features.denseblock3.denselayer20.norm.1:BatchNorm2d(864, eps=1e-05, momentum=0.1, affine=True)
base.features.denseblock3.denselayer20.relu.1:ReLU (inplace)
base.features.denseblock3.denselayer20.conv.1:Conv2d(864, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
base.features.denseblock3.denselayer20.norm.2:BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
base.features.denseblock3.denselayer20.relu.2:ReLU (inplace)
base.features.denseblock3.denselayer20.conv.2:Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
base.features.denseblock3.denselayer21:_DenseLayer (
  (norm.1): BatchNorm2d(896, eps=1e-05, momentum=0.1, affine=True)
  (relu.1): ReLU (inplace)
  (conv.1): Conv2d(896, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
  (relu.2): ReLU (inplace)
  (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
)
base.features.denseblock3.denselayer21.norm.1:BatchNorm2d(896, eps=1e-05, momentum=0.1, affine=True)
base.features.denseblock3.denselayer21.relu.1:ReLU (inplace)
base.features.denseblock3.denselayer21.conv.1:Conv2d(896, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
base.features.denseblock3.denselayer21.norm.2:BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
base.features.denseblock3.denselayer21.relu.2:ReLU (inplace)
base.features.denseblock3.denselayer21.conv.2:Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
base.features.denseblock3.denselayer22:_DenseLayer (
  (norm.1): BatchNorm2d(928, eps=1e-05, momentum=0.1, affine=True)
  (relu.1): ReLU (inplace)
  (conv.1): Conv2d(928, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
  (relu.2): ReLU (inplace)
  (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
)
base.features.denseblock3.denselayer22.norm.1:BatchNorm2d(928, eps=1e-05, momentum=0.1, affine=True)
base.features.denseblock3.denselayer22.relu.1:ReLU (inplace)
base.features.denseblock3.denselayer22.conv.1:Conv2d(928, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
base.features.denseblock3.denselayer22.norm.2:BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
base.features.denseblock3.denselayer22.relu.2:ReLU (inplace)
base.features.denseblock3.denselayer22.conv.2:Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
base.features.denseblock3.denselayer23:_DenseLayer (
  (norm.1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True)
  (relu.1): ReLU (inplace)
  (conv.1): Conv2d(960, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
  (relu.2): ReLU (inplace)
  (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
)
base.features.denseblock3.denselayer23.norm.1:BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True)
base.features.denseblock3.denselayer23.relu.1:ReLU (inplace)
base.features.denseblock3.denselayer23.conv.1:Conv2d(960, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
base.features.denseblock3.denselayer23.norm.2:BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
base.features.denseblock3.denselayer23.relu.2:ReLU (inplace)
base.features.denseblock3.denselayer23.conv.2:Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
base.features.denseblock3.denselayer24:_DenseLayer (
  (norm.1): BatchNorm2d(992, eps=1e-05, momentum=0.1, affine=True)
  (relu.1): ReLU (inplace)
  (conv.1): Conv2d(992, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
  (relu.2): ReLU (inplace)
  (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
)
base.features.denseblock3.denselayer24.norm.1:BatchNorm2d(992, eps=1e-05, momentum=0.1, affine=True)
base.features.denseblock3.denselayer24.relu.1:ReLU (inplace)
base.features.denseblock3.denselayer24.conv.1:Conv2d(992, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
base.features.denseblock3.denselayer24.norm.2:BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
base.features.denseblock3.denselayer24.relu.2:ReLU (inplace)
base.features.denseblock3.denselayer24.conv.2:Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
base.features.transition3:_Transition (
  (norm): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True)
  (relu): ReLU (inplace)
  (conv): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (pool): AvgPool2d (size=2, stride=2, padding=0, ceil_mode=False, count_include_pad=True)
)
base.features.transition3.norm:BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True)
base.features.transition3.relu:ReLU (inplace)
base.features.transition3.conv:Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
base.features.transition3.pool:AvgPool2d (size=2, stride=2, padding=0, ceil_mode=False, count_include_pad=True)
base.features.denseblock4:_DenseBlock (
  (denselayer1): _DenseLayer (
    (norm.1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True)
    (relu.1): ReLU (inplace)
    (conv.1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
    (relu.2): ReLU (inplace)
    (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  )
  (denselayer2): _DenseLayer (
    (norm.1): BatchNorm2d(544, eps=1e-05, momentum=0.1, affine=True)
    (relu.1): ReLU (inplace)
    (conv.1): Conv2d(544, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
    (relu.2): ReLU (inplace)
    (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  )
  (denselayer3): _DenseLayer (
    (norm.1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True)
    (relu.1): ReLU (inplace)
    (conv.1): Conv2d(576, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
    (relu.2): ReLU (inplace)
    (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  )
  (denselayer4): _DenseLayer (
    (norm.1): BatchNorm2d(608, eps=1e-05, momentum=0.1, affine=True)
    (relu.1): ReLU (inplace)
    (conv.1): Conv2d(608, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
    (relu.2): ReLU (inplace)
    (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  )
  (denselayer5): _DenseLayer (
    (norm.1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True)
    (relu.1): ReLU (inplace)
    (conv.1): Conv2d(640, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
    (relu.2): ReLU (inplace)
    (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  )
  (denselayer6): _DenseLayer (
    (norm.1): BatchNorm2d(672, eps=1e-05, momentum=0.1, affine=True)
    (relu.1): ReLU (inplace)
    (conv.1): Conv2d(672, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
    (relu.2): ReLU (inplace)
    (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  )
  (denselayer7): _DenseLayer (
    (norm.1): BatchNorm2d(704, eps=1e-05, momentum=0.1, affine=True)
    (relu.1): ReLU (inplace)
    (conv.1): Conv2d(704, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
    (relu.2): ReLU (inplace)
    (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  )
  (denselayer8): _DenseLayer (
    (norm.1): BatchNorm2d(736, eps=1e-05, momentum=0.1, affine=True)
    (relu.1): ReLU (inplace)
    (conv.1): Conv2d(736, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
    (relu.2): ReLU (inplace)
    (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  )
  (denselayer9): _DenseLayer (
    (norm.1): BatchNorm2d(768, eps=1e-05, momentum=0.1, affine=True)
    (relu.1): ReLU (inplace)
    (conv.1): Conv2d(768, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
    (relu.2): ReLU (inplace)
    (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  )
  (denselayer10): _DenseLayer (
    (norm.1): BatchNorm2d(800, eps=1e-05, momentum=0.1, affine=True)
    (relu.1): ReLU (inplace)
    (conv.1): Conv2d(800, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
    (relu.2): ReLU (inplace)
    (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  )
  (denselayer11): _DenseLayer (
    (norm.1): BatchNorm2d(832, eps=1e-05, momentum=0.1, affine=True)
    (relu.1): ReLU (inplace)
    (conv.1): Conv2d(832, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
    (relu.2): ReLU (inplace)
    (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  )
  (denselayer12): _DenseLayer (
    (norm.1): BatchNorm2d(864, eps=1e-05, momentum=0.1, affine=True)
    (relu.1): ReLU (inplace)
    (conv.1): Conv2d(864, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
    (relu.2): ReLU (inplace)
    (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  )
  (denselayer13): _DenseLayer (
    (norm.1): BatchNorm2d(896, eps=1e-05, momentum=0.1, affine=True)
    (relu.1): ReLU (inplace)
    (conv.1): Conv2d(896, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
    (relu.2): ReLU (inplace)
    (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  )
  (denselayer14): _DenseLayer (
    (norm.1): BatchNorm2d(928, eps=1e-05, momentum=0.1, affine=True)
    (relu.1): ReLU (inplace)
    (conv.1): Conv2d(928, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
    (relu.2): ReLU (inplace)
    (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  )
  (denselayer15): _DenseLayer (
    (norm.1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True)
    (relu.1): ReLU (inplace)
    (conv.1): Conv2d(960, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
    (relu.2): ReLU (inplace)
    (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  )
  (denselayer16): _DenseLayer (
    (norm.1): BatchNorm2d(992, eps=1e-05, momentum=0.1, affine=True)
    (relu.1): ReLU (inplace)
    (conv.1): Conv2d(992, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
    (relu.2): ReLU (inplace)
    (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  )
)
base.features.denseblock4.denselayer1:_DenseLayer (
  (norm.1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True)
  (relu.1): ReLU (inplace)
  (conv.1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
  (relu.2): ReLU (inplace)
  (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
)
base.features.denseblock4.denselayer1.norm.1:BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True)
base.features.denseblock4.denselayer1.relu.1:ReLU (inplace)
base.features.denseblock4.denselayer1.conv.1:Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
base.features.denseblock4.denselayer1.norm.2:BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
base.features.denseblock4.denselayer1.relu.2:ReLU (inplace)
base.features.denseblock4.denselayer1.conv.2:Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
base.features.denseblock4.denselayer2:_DenseLayer (
  (norm.1): BatchNorm2d(544, eps=1e-05, momentum=0.1, affine=True)
  (relu.1): ReLU (inplace)
  (conv.1): Conv2d(544, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
  (relu.2): ReLU (inplace)
  (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
)
base.features.denseblock4.denselayer2.norm.1:BatchNorm2d(544, eps=1e-05, momentum=0.1, affine=True)
base.features.denseblock4.denselayer2.relu.1:ReLU (inplace)
base.features.denseblock4.denselayer2.conv.1:Conv2d(544, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
base.features.denseblock4.denselayer2.norm.2:BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
base.features.denseblock4.denselayer2.relu.2:ReLU (inplace)
base.features.denseblock4.denselayer2.conv.2:Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
base.features.denseblock4.denselayer3:_DenseLayer (
  (norm.1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True)
  (relu.1): ReLU (inplace)
  (conv.1): Conv2d(576, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
  (relu.2): ReLU (inplace)
  (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
)
base.features.denseblock4.denselayer3.norm.1:BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True)
base.features.denseblock4.denselayer3.relu.1:ReLU (inplace)
base.features.denseblock4.denselayer3.conv.1:Conv2d(576, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
base.features.denseblock4.denselayer3.norm.2:BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
base.features.denseblock4.denselayer3.relu.2:ReLU (inplace)
base.features.denseblock4.denselayer3.conv.2:Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
base.features.denseblock4.denselayer4:_DenseLayer (
  (norm.1): BatchNorm2d(608, eps=1e-05, momentum=0.1, affine=True)
  (relu.1): ReLU (inplace)
  (conv.1): Conv2d(608, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
  (relu.2): ReLU (inplace)
  (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
)
base.features.denseblock4.denselayer4.norm.1:BatchNorm2d(608, eps=1e-05, momentum=0.1, affine=True)
base.features.denseblock4.denselayer4.relu.1:ReLU (inplace)
base.features.denseblock4.denselayer4.conv.1:Conv2d(608, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
base.features.denseblock4.denselayer4.norm.2:BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
base.features.denseblock4.denselayer4.relu.2:ReLU (inplace)
base.features.denseblock4.denselayer4.conv.2:Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
base.features.denseblock4.denselayer5:_DenseLayer (
  (norm.1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True)
  (relu.1): ReLU (inplace)
  (conv.1): Conv2d(640, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
  (relu.2): ReLU (inplace)
  (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
)
base.features.denseblock4.denselayer5.norm.1:BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True)
base.features.denseblock4.denselayer5.relu.1:ReLU (inplace)
base.features.denseblock4.denselayer5.conv.1:Conv2d(640, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
base.features.denseblock4.denselayer5.norm.2:BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
base.features.denseblock4.denselayer5.relu.2:ReLU (inplace)
base.features.denseblock4.denselayer5.conv.2:Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
base.features.denseblock4.denselayer6:_DenseLayer (
  (norm.1): BatchNorm2d(672, eps=1e-05, momentum=0.1, affine=True)
  (relu.1): ReLU (inplace)
  (conv.1): Conv2d(672, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
  (relu.2): ReLU (inplace)
  (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
)
base.features.denseblock4.denselayer6.norm.1:BatchNorm2d(672, eps=1e-05, momentum=0.1, affine=True)
base.features.denseblock4.denselayer6.relu.1:ReLU (inplace)
base.features.denseblock4.denselayer6.conv.1:Conv2d(672, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
base.features.denseblock4.denselayer6.norm.2:BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
base.features.denseblock4.denselayer6.relu.2:ReLU (inplace)
base.features.denseblock4.denselayer6.conv.2:Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
base.features.denseblock4.denselayer7:_DenseLayer (
  (norm.1): BatchNorm2d(704, eps=1e-05, momentum=0.1, affine=True)
  (relu.1): ReLU (inplace)
  (conv.1): Conv2d(704, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
  (relu.2): ReLU (inplace)
  (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
)
base.features.denseblock4.denselayer7.norm.1:BatchNorm2d(704, eps=1e-05, momentum=0.1, affine=True)
base.features.denseblock4.denselayer7.relu.1:ReLU (inplace)
base.features.denseblock4.denselayer7.conv.1:Conv2d(704, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
base.features.denseblock4.denselayer7.norm.2:BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
base.features.denseblock4.denselayer7.relu.2:ReLU (inplace)
base.features.denseblock4.denselayer7.conv.2:Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
base.features.denseblock4.denselayer8:_DenseLayer (
  (norm.1): BatchNorm2d(736, eps=1e-05, momentum=0.1, affine=True)
  (relu.1): ReLU (inplace)
  (conv.1): Conv2d(736, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
  (relu.2): ReLU (inplace)
  (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
)
base.features.denseblock4.denselayer8.norm.1:BatchNorm2d(736, eps=1e-05, momentum=0.1, affine=True)
base.features.denseblock4.denselayer8.relu.1:ReLU (inplace)
base.features.denseblock4.denselayer8.conv.1:Conv2d(736, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
base.features.denseblock4.denselayer8.norm.2:BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
base.features.denseblock4.denselayer8.relu.2:ReLU (inplace)
base.features.denseblock4.denselayer8.conv.2:Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
base.features.denseblock4.denselayer9:_DenseLayer (
  (norm.1): BatchNorm2d(768, eps=1e-05, momentum=0.1, affine=True)
  (relu.1): ReLU (inplace)
  (conv.1): Conv2d(768, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
  (relu.2): ReLU (inplace)
  (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
)
base.features.denseblock4.denselayer9.norm.1:BatchNorm2d(768, eps=1e-05, momentum=0.1, affine=True)
base.features.denseblock4.denselayer9.relu.1:ReLU (inplace)
base.features.denseblock4.denselayer9.conv.1:Conv2d(768, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
base.features.denseblock4.denselayer9.norm.2:BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
base.features.denseblock4.denselayer9.relu.2:ReLU (inplace)
base.features.denseblock4.denselayer9.conv.2:Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
base.features.denseblock4.denselayer10:_DenseLayer (
  (norm.1): BatchNorm2d(800, eps=1e-05, momentum=0.1, affine=True)
  (relu.1): ReLU (inplace)
  (conv.1): Conv2d(800, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
  (relu.2): ReLU (inplace)
  (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
)
base.features.denseblock4.denselayer10.norm.1:BatchNorm2d(800, eps=1e-05, momentum=0.1, affine=True)
base.features.denseblock4.denselayer10.relu.1:ReLU (inplace)
base.features.denseblock4.denselayer10.conv.1:Conv2d(800, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
base.features.denseblock4.denselayer10.norm.2:BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
base.features.denseblock4.denselayer10.relu.2:ReLU (inplace)
base.features.denseblock4.denselayer10.conv.2:Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
base.features.denseblock4.denselayer11:_DenseLayer (
  (norm.1): BatchNorm2d(832, eps=1e-05, momentum=0.1, affine=True)
  (relu.1): ReLU (inplace)
  (conv.1): Conv2d(832, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
  (relu.2): ReLU (inplace)
  (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
)
base.features.denseblock4.denselayer11.norm.1:BatchNorm2d(832, eps=1e-05, momentum=0.1, affine=True)
base.features.denseblock4.denselayer11.relu.1:ReLU (inplace)
base.features.denseblock4.denselayer11.conv.1:Conv2d(832, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
base.features.denseblock4.denselayer11.norm.2:BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
base.features.denseblock4.denselayer11.relu.2:ReLU (inplace)
base.features.denseblock4.denselayer11.conv.2:Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
base.features.denseblock4.denselayer12:_DenseLayer (
  (norm.1): BatchNorm2d(864, eps=1e-05, momentum=0.1, affine=True)
  (relu.1): ReLU (inplace)
  (conv.1): Conv2d(864, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
  (relu.2): ReLU (inplace)
  (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
)
base.features.denseblock4.denselayer12.norm.1:BatchNorm2d(864, eps=1e-05, momentum=0.1, affine=True)
base.features.denseblock4.denselayer12.relu.1:ReLU (inplace)
base.features.denseblock4.denselayer12.conv.1:Conv2d(864, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
base.features.denseblock4.denselayer12.norm.2:BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
base.features.denseblock4.denselayer12.relu.2:ReLU (inplace)
base.features.denseblock4.denselayer12.conv.2:Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
base.features.denseblock4.denselayer13:_DenseLayer (
  (norm.1): BatchNorm2d(896, eps=1e-05, momentum=0.1, affine=True)
  (relu.1): ReLU (inplace)
  (conv.1): Conv2d(896, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
  (relu.2): ReLU (inplace)
  (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
)
base.features.denseblock4.denselayer13.norm.1:BatchNorm2d(896, eps=1e-05, momentum=0.1, affine=True)
base.features.denseblock4.denselayer13.relu.1:ReLU (inplace)
base.features.denseblock4.denselayer13.conv.1:Conv2d(896, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
base.features.denseblock4.denselayer13.norm.2:BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
base.features.denseblock4.denselayer13.relu.2:ReLU (inplace)
base.features.denseblock4.denselayer13.conv.2:Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
base.features.denseblock4.denselayer14:_DenseLayer (
  (norm.1): BatchNorm2d(928, eps=1e-05, momentum=0.1, affine=True)
  (relu.1): ReLU (inplace)
  (conv.1): Conv2d(928, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
  (relu.2): ReLU (inplace)
  (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
)
base.features.denseblock4.denselayer14.norm.1:BatchNorm2d(928, eps=1e-05, momentum=0.1, affine=True)
base.features.denseblock4.denselayer14.relu.1:ReLU (inplace)
base.features.denseblock4.denselayer14.conv.1:Conv2d(928, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
base.features.denseblock4.denselayer14.norm.2:BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
base.features.denseblock4.denselayer14.relu.2:ReLU (inplace)
base.features.denseblock4.denselayer14.conv.2:Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
base.features.denseblock4.denselayer15:_DenseLayer (
  (norm.1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True)
  (relu.1): ReLU (inplace)
  (conv.1): Conv2d(960, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
  (relu.2): ReLU (inplace)
  (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
)
base.features.denseblock4.denselayer15.norm.1:BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True)
base.features.denseblock4.denselayer15.relu.1:ReLU (inplace)
base.features.denseblock4.denselayer15.conv.1:Conv2d(960, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
base.features.denseblock4.denselayer15.norm.2:BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
base.features.denseblock4.denselayer15.relu.2:ReLU (inplace)
base.features.denseblock4.denselayer15.conv.2:Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
base.features.denseblock4.denselayer16:_DenseLayer (
  (norm.1): BatchNorm2d(992, eps=1e-05, momentum=0.1, affine=True)
  (relu.1): ReLU (inplace)
  (conv.1): Conv2d(992, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (norm.2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
  (relu.2): ReLU (inplace)
  (conv.2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
)
base.features.denseblock4.denselayer16.norm.1:BatchNorm2d(992, eps=1e-05, momentum=0.1, affine=True)
base.features.denseblock4.denselayer16.relu.1:ReLU (inplace)
base.features.denseblock4.denselayer16.conv.1:Conv2d(992, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
base.features.denseblock4.denselayer16.norm.2:BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
base.features.denseblock4.denselayer16.relu.2:ReLU (inplace)
base.features.denseblock4.denselayer16.conv.2:Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
base.features.norm5:BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True)
feat:Linear (1024 -> 256)
feat_bn:BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True)
classifier:Linear (256 -> 20330)
################### modules ################


################### params ################
classifier.weight
classifier.weight:size torch.Size([20330, 256]),abs_avg:0.000797544045628
classifier.bias
classifier.bias:size torch.Size([20330]),abs_avg:0.0
################### params ################


netG


################### modules ################
:_netG (
  (hidden): Sequential (
    (norm2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)
    (relu2): ReLU (inplace)
    (conv3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (norm3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)
    (relu3): ReLU (inplace)
    (pool3): MaxPool2d (size=(2, 2), stride=(2, 2), padding=(1, 1), dilation=(1, 1))
    (conv4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (norm4): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)
    (relu4): ReLU (inplace)
    (pool4): MaxPool2d (size=(2, 2), stride=(2, 2), padding=(1, 1), dilation=(1, 1))
  )
  (embedding): Sequential (
    (feat): Linear (4608 -> 2048)
  )
  (preprocess): Sequential (
    (0): Linear (2048 -> 27648)
    (1): BatchNorm1d(27648, eps=1e-05, momentum=0.1, affine=True)
    (2): ReLU (inplace)
  )
  (main): Sequential (
    (0): ConvTranspose2d(1024, 512, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1), output_padding=(0, 1), bias=False)
    (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True)
    (2): ReLU (inplace)
    (3): ConvTranspose2d(512, 256, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1), bias=False)
    (4): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)
    (5): ReLU (inplace)
    (6): ConvTranspose2d(256, 128, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1), bias=False)
    (7): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
    (8): ReLU (inplace)
    (9): ConvTranspose2d(128, 64, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1), bias=False)
    (10): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True)
    (11): ReLU (inplace)
    (12): ConvTranspose2d(64, 3, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1), bias=False)
    (13): Tanh ()
  )
)
hidden:Sequential (
  (norm2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)
  (relu2): ReLU (inplace)
  (conv3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (norm3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)
  (relu3): ReLU (inplace)
  (pool3): MaxPool2d (size=(2, 2), stride=(2, 2), padding=(1, 1), dilation=(1, 1))
  (conv4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (norm4): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)
  (relu4): ReLU (inplace)
  (pool4): MaxPool2d (size=(2, 2), stride=(2, 2), padding=(1, 1), dilation=(1, 1))
)
hidden.norm2:BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)
hidden.relu2:ReLU (inplace)
hidden.conv3:Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
hidden.norm3:BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)
hidden.relu3:ReLU (inplace)
hidden.pool3:MaxPool2d (size=(2, 2), stride=(2, 2), padding=(1, 1), dilation=(1, 1))
hidden.conv4:Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
hidden.norm4:BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)
hidden.relu4:ReLU (inplace)
hidden.pool4:MaxPool2d (size=(2, 2), stride=(2, 2), padding=(1, 1), dilation=(1, 1))
embedding:Sequential (
  (feat): Linear (4608 -> 2048)
)
embedding.feat:Linear (4608 -> 2048)
preprocess:Sequential (
  (0): Linear (2048 -> 27648)
  (1): BatchNorm1d(27648, eps=1e-05, momentum=0.1, affine=True)
  (2): ReLU (inplace)
)
preprocess.0:Linear (2048 -> 27648)
preprocess.1:BatchNorm1d(27648, eps=1e-05, momentum=0.1, affine=True)
preprocess.2:ReLU (inplace)
main:Sequential (
  (0): ConvTranspose2d(1024, 512, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1), output_padding=(0, 1), bias=False)
  (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True)
  (2): ReLU (inplace)
  (3): ConvTranspose2d(512, 256, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1), bias=False)
  (4): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)
  (5): ReLU (inplace)
  (6): ConvTranspose2d(256, 128, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1), bias=False)
  (7): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
  (8): ReLU (inplace)
  (9): ConvTranspose2d(128, 64, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1), bias=False)
  (10): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True)
  (11): ReLU (inplace)
  (12): ConvTranspose2d(64, 3, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1), bias=False)
  (13): Tanh ()
)
main.0:ConvTranspose2d(1024, 512, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1), output_padding=(0, 1), bias=False)
main.1:BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True)
main.2:ReLU (inplace)
main.3:ConvTranspose2d(512, 256, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1), bias=False)
main.4:BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)
main.5:ReLU (inplace)
main.6:ConvTranspose2d(256, 128, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1), bias=False)
main.7:BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
main.8:ReLU (inplace)
main.9:ConvTranspose2d(128, 64, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1), bias=False)
main.10:BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True)
main.11:ReLU (inplace)
main.12:ConvTranspose2d(64, 3, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1), bias=False)
main.13:Tanh ()
################### modules ################


################### params ################
hidden.norm2.weight
hidden.norm2.weight:size torch.Size([256]),abs_avg:0.491101349948
hidden.norm2.bias
hidden.norm2.bias:size torch.Size([256]),abs_avg:0.0
hidden.conv3.weight
hidden.conv3.weight:size torch.Size([256, 256, 3, 3]),abs_avg:0.0104280505113
hidden.norm3.weight
hidden.norm3.weight:size torch.Size([256]),abs_avg:0.473118647493
hidden.norm3.bias
hidden.norm3.bias:size torch.Size([256]),abs_avg:0.0
hidden.conv4.weight
hidden.conv4.weight:size torch.Size([256, 256, 3, 3]),abs_avg:0.0104217913903
hidden.norm4.weight
hidden.norm4.weight:size torch.Size([256]),abs_avg:0.502433944632
hidden.norm4.bias
hidden.norm4.bias:size torch.Size([256]),abs_avg:0.0
preprocess.0.weight
preprocess.0.weight:size torch.Size([27648, 2048]),abs_avg:0.0110480546744
preprocess.0.bias
preprocess.0.bias:size torch.Size([27648]),abs_avg:0.0110634454787
preprocess.1.weight
preprocess.1.weight:size torch.Size([27648]),abs_avg:0.500564346678
preprocess.1.bias
preprocess.1.bias:size torch.Size([27648]),abs_avg:0.0
main.0.weight
main.0.weight:size torch.Size([1024, 512, 4, 4]),abs_avg:0.00390587532491
main.1.weight
main.1.weight:size torch.Size([512]),abs_avg:0.502518653407
main.1.bias
main.1.bias:size torch.Size([512]),abs_avg:0.0
main.3.weight
main.3.weight:size torch.Size([512, 256, 4, 4]),abs_avg:0.0055214832967
main.4.weight
main.4.weight:size torch.Size([256]),abs_avg:0.516737089049
main.4.bias
main.4.bias:size torch.Size([256]),abs_avg:0.0
main.6.weight
main.6.weight:size torch.Size([256, 128, 4, 4]),abs_avg:0.00781862626711
main.7.weight
main.7.weight:size torch.Size([128]),abs_avg:0.491984217391
main.7.bias
main.7.bias:size torch.Size([128]),abs_avg:0.0
main.9.weight
main.9.weight:size torch.Size([128, 64, 4, 4]),abs_avg:0.0110333594033
main.10.weight
main.10.weight:size torch.Size([64]),abs_avg:0.517427190833
main.10.bias
main.10.bias:size torch.Size([64]),abs_avg:0.0
main.12.weight
main.12.weight:size torch.Size([64, 3, 4, 4]),abs_avg:0.0153812734083
################### params ################


lr_mult: 0.001,params: ['base.features.conv0.weight', 'base.features.norm0.weight', 'base.features.norm0.bias', 'base.features.denseblock1.denselayer1.norm.1.weight', 'base.features.denseblock1.denselayer1.norm.1.bias', 'base.features.denseblock1.denselayer1.conv.1.weight', 'base.features.denseblock1.denselayer1.norm.2.weight', 'base.features.denseblock1.denselayer1.norm.2.bias', 'base.features.denseblock1.denselayer1.conv.2.weight', 'base.features.denseblock1.denselayer2.norm.1.weight', 'base.features.denseblock1.denselayer2.norm.1.bias', 'base.features.denseblock1.denselayer2.conv.1.weight', 'base.features.denseblock1.denselayer2.norm.2.weight', 'base.features.denseblock1.denselayer2.norm.2.bias', 'base.features.denseblock1.denselayer2.conv.2.weight', 'base.features.denseblock1.denselayer3.norm.1.weight', 'base.features.denseblock1.denselayer3.norm.1.bias', 'base.features.denseblock1.denselayer3.conv.1.weight', 'base.features.denseblock1.denselayer3.norm.2.weight', 'base.features.denseblock1.denselayer3.norm.2.bias', 'base.features.denseblock1.denselayer3.conv.2.weight', 'base.features.denseblock1.denselayer4.norm.1.weight', 'base.features.denseblock1.denselayer4.norm.1.bias', 'base.features.denseblock1.denselayer4.conv.1.weight', 'base.features.denseblock1.denselayer4.norm.2.weight', 'base.features.denseblock1.denselayer4.norm.2.bias', 'base.features.denseblock1.denselayer4.conv.2.weight', 'base.features.denseblock1.denselayer5.norm.1.weight', 'base.features.denseblock1.denselayer5.norm.1.bias', 'base.features.denseblock1.denselayer5.conv.1.weight', 'base.features.denseblock1.denselayer5.norm.2.weight', 'base.features.denseblock1.denselayer5.norm.2.bias', 'base.features.denseblock1.denselayer5.conv.2.weight', 'base.features.denseblock1.denselayer6.norm.1.weight', 'base.features.denseblock1.denselayer6.norm.1.bias', 'base.features.denseblock1.denselayer6.conv.1.weight', 'base.features.denseblock1.denselayer6.norm.2.weight', 'base.features.denseblock1.denselayer6.norm.2.bias', 'base.features.denseblock1.denselayer6.conv.2.weight', 'base.features.transition1.norm.weight', 'base.features.transition1.norm.bias', 'base.features.transition1.conv.weight', 'base.features.denseblock2.denselayer1.norm.1.weight', 'base.features.denseblock2.denselayer1.norm.1.bias', 'base.features.denseblock2.denselayer1.conv.1.weight', 'base.features.denseblock2.denselayer1.norm.2.weight', 'base.features.denseblock2.denselayer1.norm.2.bias', 'base.features.denseblock2.denselayer1.conv.2.weight', 'base.features.denseblock2.denselayer2.norm.1.weight', 'base.features.denseblock2.denselayer2.norm.1.bias', 'base.features.denseblock2.denselayer2.conv.1.weight', 'base.features.denseblock2.denselayer2.norm.2.weight', 'base.features.denseblock2.denselayer2.norm.2.bias', 'base.features.denseblock2.denselayer2.conv.2.weight', 'base.features.denseblock2.denselayer3.norm.1.weight', 'base.features.denseblock2.denselayer3.norm.1.bias', 'base.features.denseblock2.denselayer3.conv.1.weight', 'base.features.denseblock2.denselayer3.norm.2.weight', 'base.features.denseblock2.denselayer3.norm.2.bias', 'base.features.denseblock2.denselayer3.conv.2.weight', 'base.features.denseblock2.denselayer4.norm.1.weight', 'base.features.denseblock2.denselayer4.norm.1.bias', 'base.features.denseblock2.denselayer4.conv.1.weight', 'base.features.denseblock2.denselayer4.norm.2.weight', 'base.features.denseblock2.denselayer4.norm.2.bias', 'base.features.denseblock2.denselayer4.conv.2.weight', 'base.features.denseblock2.denselayer5.norm.1.weight', 'base.features.denseblock2.denselayer5.norm.1.bias', 'base.features.denseblock2.denselayer5.conv.1.weight', 'base.features.denseblock2.denselayer5.norm.2.weight', 'base.features.denseblock2.denselayer5.norm.2.bias', 'base.features.denseblock2.denselayer5.conv.2.weight', 'base.features.denseblock2.denselayer6.norm.1.weight', 'base.features.denseblock2.denselayer6.norm.1.bias', 'base.features.denseblock2.denselayer6.conv.1.weight', 'base.features.denseblock2.denselayer6.norm.2.weight', 'base.features.denseblock2.denselayer6.norm.2.bias', 'base.features.denseblock2.denselayer6.conv.2.weight', 'base.features.denseblock2.denselayer7.norm.1.weight', 'base.features.denseblock2.denselayer7.norm.1.bias', 'base.features.denseblock2.denselayer7.conv.1.weight', 'base.features.denseblock2.denselayer7.norm.2.weight', 'base.features.denseblock2.denselayer7.norm.2.bias', 'base.features.denseblock2.denselayer7.conv.2.weight', 'base.features.denseblock2.denselayer8.norm.1.weight', 'base.features.denseblock2.denselayer8.norm.1.bias', 'base.features.denseblock2.denselayer8.conv.1.weight', 'base.features.denseblock2.denselayer8.norm.2.weight', 'base.features.denseblock2.denselayer8.norm.2.bias', 'base.features.denseblock2.denselayer8.conv.2.weight', 'base.features.denseblock2.denselayer9.norm.1.weight', 'base.features.denseblock2.denselayer9.norm.1.bias', 'base.features.denseblock2.denselayer9.conv.1.weight', 'base.features.denseblock2.denselayer9.norm.2.weight', 'base.features.denseblock2.denselayer9.norm.2.bias', 'base.features.denseblock2.denselayer9.conv.2.weight', 'base.features.denseblock2.denselayer10.norm.1.weight', 'base.features.denseblock2.denselayer10.norm.1.bias', 'base.features.denseblock2.denselayer10.conv.1.weight', 'base.features.denseblock2.denselayer10.norm.2.weight', 'base.features.denseblock2.denselayer10.norm.2.bias', 'base.features.denseblock2.denselayer10.conv.2.weight', 'base.features.denseblock2.denselayer11.norm.1.weight', 'base.features.denseblock2.denselayer11.norm.1.bias', 'base.features.denseblock2.denselayer11.conv.1.weight', 'base.features.denseblock2.denselayer11.norm.2.weight', 'base.features.denseblock2.denselayer11.norm.2.bias', 'base.features.denseblock2.denselayer11.conv.2.weight', 'base.features.denseblock2.denselayer12.norm.1.weight', 'base.features.denseblock2.denselayer12.norm.1.bias', 'base.features.denseblock2.denselayer12.conv.1.weight', 'base.features.denseblock2.denselayer12.norm.2.weight', 'base.features.denseblock2.denselayer12.norm.2.bias', 'base.features.denseblock2.denselayer12.conv.2.weight', 'base.features.transition2.norm.weight', 'base.features.transition2.norm.bias', 'base.features.transition2.conv.weight', 'base.features.denseblock3.denselayer1.norm.1.weight', 'base.features.denseblock3.denselayer1.norm.1.bias', 'base.features.denseblock3.denselayer1.conv.1.weight', 'base.features.denseblock3.denselayer1.norm.2.weight', 'base.features.denseblock3.denselayer1.norm.2.bias', 'base.features.denseblock3.denselayer1.conv.2.weight', 'base.features.denseblock3.denselayer2.norm.1.weight', 'base.features.denseblock3.denselayer2.norm.1.bias', 'base.features.denseblock3.denselayer2.conv.1.weight', 'base.features.denseblock3.denselayer2.norm.2.weight', 'base.features.denseblock3.denselayer2.norm.2.bias', 'base.features.denseblock3.denselayer2.conv.2.weight', 'base.features.denseblock3.denselayer3.norm.1.weight', 'base.features.denseblock3.denselayer3.norm.1.bias', 'base.features.denseblock3.denselayer3.conv.1.weight', 'base.features.denseblock3.denselayer3.norm.2.weight', 'base.features.denseblock3.denselayer3.norm.2.bias', 'base.features.denseblock3.denselayer3.conv.2.weight', 'base.features.denseblock3.denselayer4.norm.1.weight', 'base.features.denseblock3.denselayer4.norm.1.bias', 'base.features.denseblock3.denselayer4.conv.1.weight', 'base.features.denseblock3.denselayer4.norm.2.weight', 'base.features.denseblock3.denselayer4.norm.2.bias', 'base.features.denseblock3.denselayer4.conv.2.weight', 'base.features.denseblock3.denselayer5.norm.1.weight', 'base.features.denseblock3.denselayer5.norm.1.bias', 'base.features.denseblock3.denselayer5.conv.1.weight', 'base.features.denseblock3.denselayer5.norm.2.weight', 'base.features.denseblock3.denselayer5.norm.2.bias', 'base.features.denseblock3.denselayer5.conv.2.weight', 'base.features.denseblock3.denselayer6.norm.1.weight', 'base.features.denseblock3.denselayer6.norm.1.bias', 'base.features.denseblock3.denselayer6.conv.1.weight', 'base.features.denseblock3.denselayer6.norm.2.weight', 'base.features.denseblock3.denselayer6.norm.2.bias', 'base.features.denseblock3.denselayer6.conv.2.weight', 'base.features.denseblock3.denselayer7.norm.1.weight', 'base.features.denseblock3.denselayer7.norm.1.bias', 'base.features.denseblock3.denselayer7.conv.1.weight', 'base.features.denseblock3.denselayer7.norm.2.weight', 'base.features.denseblock3.denselayer7.norm.2.bias', 'base.features.denseblock3.denselayer7.conv.2.weight', 'base.features.denseblock3.denselayer8.norm.1.weight', 'base.features.denseblock3.denselayer8.norm.1.bias', 'base.features.denseblock3.denselayer8.conv.1.weight', 'base.features.denseblock3.denselayer8.norm.2.weight', 'base.features.denseblock3.denselayer8.norm.2.bias', 'base.features.denseblock3.denselayer8.conv.2.weight', 'base.features.denseblock3.denselayer9.norm.1.weight', 'base.features.denseblock3.denselayer9.norm.1.bias', 'base.features.denseblock3.denselayer9.conv.1.weight', 'base.features.denseblock3.denselayer9.norm.2.weight', 'base.features.denseblock3.denselayer9.norm.2.bias', 'base.features.denseblock3.denselayer9.conv.2.weight', 'base.features.denseblock3.denselayer10.norm.1.weight', 'base.features.denseblock3.denselayer10.norm.1.bias', 'base.features.denseblock3.denselayer10.conv.1.weight', 'base.features.denseblock3.denselayer10.norm.2.weight', 'base.features.denseblock3.denselayer10.norm.2.bias', 'base.features.denseblock3.denselayer10.conv.2.weight', 'base.features.denseblock3.denselayer11.norm.1.weight', 'base.features.denseblock3.denselayer11.norm.1.bias', 'base.features.denseblock3.denselayer11.conv.1.weight', 'base.features.denseblock3.denselayer11.norm.2.weight', 'base.features.denseblock3.denselayer11.norm.2.bias', 'base.features.denseblock3.denselayer11.conv.2.weight', 'base.features.denseblock3.denselayer12.norm.1.weight', 'base.features.denseblock3.denselayer12.norm.1.bias', 'base.features.denseblock3.denselayer12.conv.1.weight', 'base.features.denseblock3.denselayer12.norm.2.weight', 'base.features.denseblock3.denselayer12.norm.2.bias', 'base.features.denseblock3.denselayer12.conv.2.weight', 'base.features.denseblock3.denselayer13.norm.1.weight', 'base.features.denseblock3.denselayer13.norm.1.bias', 'base.features.denseblock3.denselayer13.conv.1.weight', 'base.features.denseblock3.denselayer13.norm.2.weight', 'base.features.denseblock3.denselayer13.norm.2.bias', 'base.features.denseblock3.denselayer13.conv.2.weight', 'base.features.denseblock3.denselayer14.norm.1.weight', 'base.features.denseblock3.denselayer14.norm.1.bias', 'base.features.denseblock3.denselayer14.conv.1.weight', 'base.features.denseblock3.denselayer14.norm.2.weight', 'base.features.denseblock3.denselayer14.norm.2.bias', 'base.features.denseblock3.denselayer14.conv.2.weight', 'base.features.denseblock3.denselayer15.norm.1.weight', 'base.features.denseblock3.denselayer15.norm.1.bias', 'base.features.denseblock3.denselayer15.conv.1.weight', 'base.features.denseblock3.denselayer15.norm.2.weight', 'base.features.denseblock3.denselayer15.norm.2.bias', 'base.features.denseblock3.denselayer15.conv.2.weight', 'base.features.denseblock3.denselayer16.norm.1.weight', 'base.features.denseblock3.denselayer16.norm.1.bias', 'base.features.denseblock3.denselayer16.conv.1.weight', 'base.features.denseblock3.denselayer16.norm.2.weight', 'base.features.denseblock3.denselayer16.norm.2.bias', 'base.features.denseblock3.denselayer16.conv.2.weight', 'base.features.denseblock3.denselayer17.norm.1.weight', 'base.features.denseblock3.denselayer17.norm.1.bias', 'base.features.denseblock3.denselayer17.conv.1.weight', 'base.features.denseblock3.denselayer17.norm.2.weight', 'base.features.denseblock3.denselayer17.norm.2.bias', 'base.features.denseblock3.denselayer17.conv.2.weight', 'base.features.denseblock3.denselayer18.norm.1.weight', 'base.features.denseblock3.denselayer18.norm.1.bias', 'base.features.denseblock3.denselayer18.conv.1.weight', 'base.features.denseblock3.denselayer18.norm.2.weight', 'base.features.denseblock3.denselayer18.norm.2.bias', 'base.features.denseblock3.denselayer18.conv.2.weight', 'base.features.denseblock3.denselayer19.norm.1.weight', 'base.features.denseblock3.denselayer19.norm.1.bias', 'base.features.denseblock3.denselayer19.conv.1.weight', 'base.features.denseblock3.denselayer19.norm.2.weight', 'base.features.denseblock3.denselayer19.norm.2.bias', 'base.features.denseblock3.denselayer19.conv.2.weight', 'base.features.denseblock3.denselayer20.norm.1.weight', 'base.features.denseblock3.denselayer20.norm.1.bias', 'base.features.denseblock3.denselayer20.conv.1.weight', 'base.features.denseblock3.denselayer20.norm.2.weight', 'base.features.denseblock3.denselayer20.norm.2.bias', 'base.features.denseblock3.denselayer20.conv.2.weight', 'base.features.denseblock3.denselayer21.norm.1.weight', 'base.features.denseblock3.denselayer21.norm.1.bias', 'base.features.denseblock3.denselayer21.conv.1.weight', 'base.features.denseblock3.denselayer21.norm.2.weight', 'base.features.denseblock3.denselayer21.norm.2.bias', 'base.features.denseblock3.denselayer21.conv.2.weight', 'base.features.denseblock3.denselayer22.norm.1.weight', 'base.features.denseblock3.denselayer22.norm.1.bias', 'base.features.denseblock3.denselayer22.conv.1.weight', 'base.features.denseblock3.denselayer22.norm.2.weight', 'base.features.denseblock3.denselayer22.norm.2.bias', 'base.features.denseblock3.denselayer22.conv.2.weight', 'base.features.denseblock3.denselayer23.norm.1.weight', 'base.features.denseblock3.denselayer23.norm.1.bias', 'base.features.denseblock3.denselayer23.conv.1.weight', 'base.features.denseblock3.denselayer23.norm.2.weight', 'base.features.denseblock3.denselayer23.norm.2.bias', 'base.features.denseblock3.denselayer23.conv.2.weight', 'base.features.denseblock3.denselayer24.norm.1.weight', 'base.features.denseblock3.denselayer24.norm.1.bias', 'base.features.denseblock3.denselayer24.conv.1.weight', 'base.features.denseblock3.denselayer24.norm.2.weight', 'base.features.denseblock3.denselayer24.norm.2.bias', 'base.features.denseblock3.denselayer24.conv.2.weight', 'base.features.transition3.norm.weight', 'base.features.transition3.norm.bias', 'base.features.transition3.conv.weight', 'base.features.denseblock4.denselayer1.norm.1.weight', 'base.features.denseblock4.denselayer1.norm.1.bias', 'base.features.denseblock4.denselayer1.conv.1.weight', 'base.features.denseblock4.denselayer1.norm.2.weight', 'base.features.denseblock4.denselayer1.norm.2.bias', 'base.features.denseblock4.denselayer1.conv.2.weight', 'base.features.denseblock4.denselayer2.norm.1.weight', 'base.features.denseblock4.denselayer2.norm.1.bias', 'base.features.denseblock4.denselayer2.conv.1.weight', 'base.features.denseblock4.denselayer2.norm.2.weight', 'base.features.denseblock4.denselayer2.norm.2.bias', 'base.features.denseblock4.denselayer2.conv.2.weight', 'base.features.denseblock4.denselayer3.norm.1.weight', 'base.features.denseblock4.denselayer3.norm.1.bias', 'base.features.denseblock4.denselayer3.conv.1.weight', 'base.features.denseblock4.denselayer3.norm.2.weight', 'base.features.denseblock4.denselayer3.norm.2.bias', 'base.features.denseblock4.denselayer3.conv.2.weight', 'base.features.denseblock4.denselayer4.norm.1.weight', 'base.features.denseblock4.denselayer4.norm.1.bias', 'base.features.denseblock4.denselayer4.conv.1.weight', 'base.features.denseblock4.denselayer4.norm.2.weight', 'base.features.denseblock4.denselayer4.norm.2.bias', 'base.features.denseblock4.denselayer4.conv.2.weight', 'base.features.denseblock4.denselayer5.norm.1.weight', 'base.features.denseblock4.denselayer5.norm.1.bias', 'base.features.denseblock4.denselayer5.conv.1.weight', 'base.features.denseblock4.denselayer5.norm.2.weight', 'base.features.denseblock4.denselayer5.norm.2.bias', 'base.features.denseblock4.denselayer5.conv.2.weight', 'base.features.denseblock4.denselayer6.norm.1.weight', 'base.features.denseblock4.denselayer6.norm.1.bias', 'base.features.denseblock4.denselayer6.conv.1.weight', 'base.features.denseblock4.denselayer6.norm.2.weight', 'base.features.denseblock4.denselayer6.norm.2.bias', 'base.features.denseblock4.denselayer6.conv.2.weight', 'base.features.denseblock4.denselayer7.norm.1.weight', 'base.features.denseblock4.denselayer7.norm.1.bias', 'base.features.denseblock4.denselayer7.conv.1.weight', 'base.features.denseblock4.denselayer7.norm.2.weight', 'base.features.denseblock4.denselayer7.norm.2.bias', 'base.features.denseblock4.denselayer7.conv.2.weight', 'base.features.denseblock4.denselayer8.norm.1.weight', 'base.features.denseblock4.denselayer8.norm.1.bias', 'base.features.denseblock4.denselayer8.conv.1.weight', 'base.features.denseblock4.denselayer8.norm.2.weight', 'base.features.denseblock4.denselayer8.norm.2.bias', 'base.features.denseblock4.denselayer8.conv.2.weight', 'base.features.denseblock4.denselayer9.norm.1.weight', 'base.features.denseblock4.denselayer9.norm.1.bias', 'base.features.denseblock4.denselayer9.conv.1.weight', 'base.features.denseblock4.denselayer9.norm.2.weight', 'base.features.denseblock4.denselayer9.norm.2.bias', 'base.features.denseblock4.denselayer9.conv.2.weight', 'base.features.denseblock4.denselayer10.norm.1.weight', 'base.features.denseblock4.denselayer10.norm.1.bias', 'base.features.denseblock4.denselayer10.conv.1.weight', 'base.features.denseblock4.denselayer10.norm.2.weight', 'base.features.denseblock4.denselayer10.norm.2.bias', 'base.features.denseblock4.denselayer10.conv.2.weight', 'base.features.denseblock4.denselayer11.norm.1.weight', 'base.features.denseblock4.denselayer11.norm.1.bias', 'base.features.denseblock4.denselayer11.conv.1.weight', 'base.features.denseblock4.denselayer11.norm.2.weight', 'base.features.denseblock4.denselayer11.norm.2.bias', 'base.features.denseblock4.denselayer11.conv.2.weight', 'base.features.denseblock4.denselayer12.norm.1.weight', 'base.features.denseblock4.denselayer12.norm.1.bias', 'base.features.denseblock4.denselayer12.conv.1.weight', 'base.features.denseblock4.denselayer12.norm.2.weight', 'base.features.denseblock4.denselayer12.norm.2.bias', 'base.features.denseblock4.denselayer12.conv.2.weight', 'base.features.denseblock4.denselayer13.norm.1.weight', 'base.features.denseblock4.denselayer13.norm.1.bias', 'base.features.denseblock4.denselayer13.conv.1.weight', 'base.features.denseblock4.denselayer13.norm.2.weight', 'base.features.denseblock4.denselayer13.norm.2.bias', 'base.features.denseblock4.denselayer13.conv.2.weight', 'base.features.denseblock4.denselayer14.norm.1.weight', 'base.features.denseblock4.denselayer14.norm.1.bias', 'base.features.denseblock4.denselayer14.conv.1.weight', 'base.features.denseblock4.denselayer14.norm.2.weight', 'base.features.denseblock4.denselayer14.norm.2.bias', 'base.features.denseblock4.denselayer14.conv.2.weight', 'base.features.denseblock4.denselayer15.norm.1.weight', 'base.features.denseblock4.denselayer15.norm.1.bias', 'base.features.denseblock4.denselayer15.conv.1.weight', 'base.features.denseblock4.denselayer15.norm.2.weight', 'base.features.denseblock4.denselayer15.norm.2.bias', 'base.features.denseblock4.denselayer15.conv.2.weight', 'base.features.denseblock4.denselayer16.norm.1.weight', 'base.features.denseblock4.denselayer16.norm.1.bias', 'base.features.denseblock4.denselayer16.conv.1.weight', 'base.features.denseblock4.denselayer16.norm.2.weight', 'base.features.denseblock4.denselayer16.norm.2.bias', 'base.features.denseblock4.denselayer16.conv.2.weight', 'base.features.norm5.weight', 'base.features.norm5.bias', 'feat.weight', 'feat.bias', 'feat_bn.weight', 'feat_bn.bias', 'classifier.weight', 'classifier.bias']
epoch: 0, lr: 1e-06
epoch: 0, lr: 0.001
epoch: 0, lr: 0.001
